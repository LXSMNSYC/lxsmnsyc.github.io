[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\n/* eslint-disable no-nested-ternary */\n/**\n * @typedef {Array|Float32Array|Float64Array|number} complex\n */\n/**\n * @ignore\n */\nconst {\n  sqrt: msqrt, max, ceil: mceil,\n  floor: mfloor, abs: mabs, exp: mexp, log10: mlog10,\n  log: mlog, cos: mcos, sin: msin, tan: mtan,\n  asin: masin, acos: macos, atan: matan, atan2: matan2,\n  cosh: mcosh, sinh: msinh, tanh: mtanh, sign: msign,\n} = Math;\n/**\n * @ignore\n */\nconst masinh = x => mlog(x + msqrt(x * x + 1));\n/**\n * @ignore\n */\nconst macosh = x => mlog(x + msqrt(x * x - 1));\n/**\n * @ignore\n */\nconst matanh = x => mlog((1 + x) / (1 - x)) / 2;\n/**\n * @ignore\n */\nconst BASE_10 = [mlog(10), 0];\n/**\n * The value 2 in complex form\n */\nexport const TWO = Object.freeze([2, 0]);\n/**\n * The value 1 in complex form\n */\nexport const ONE = Object.freeze([1, 0]);\n/**\n * The value 0 in complex form\n */\nexport const ZERO = Object.freeze([0, 0]);\n/**\n * The square root of -1\n */\nexport const I = Object.freeze([0, 1]);\n/**\n * The square root of -1\n */\nexport const HALF_I = Object.freeze([0, 0.5]);\n/**\n * The negative square root of -1\n */\nexport const NI = Object.freeze([0, -1]);\n/**\n * A NaN complex\n */\nexport const NAN = Object.freeze([NaN, NaN]);\n/**\n * @ignore\n */\nconst EPSILON = 1e-7;\n/**\n * @ignore\n */\nconst eq = (a, b) => mabs(a - b) <= EPSILON * max(1, mabs(a), mabs(b));\n/**\n * @ignore\n */\nconst isNumber = x => typeof x === 'number';\n/**\n * @ignore\n */\nconst unsafeL2 = c => c[0] * c[0] + c[1] * c[1];\n/**\n * @ignore\n */\nconst unsafeAbs = c => msqrt(unsafeL2(c));\n/**\n * @ignore\n */\nconst unsafeArg = c => matan2(c[1], c[0]);\n/**\n * @ignore\n */\nconst unsafeAdd = (a, b) => [a[0] + b[0], a[1] + b[1]];\n/**\n * @ignore\n */\nconst unsafeSub = (a, b) => [a[0] - b[0], a[1] - b[1]];\n/**\n * @ignore\n */\nconst unsafeMul = (a, b) => [\n  a[0] * b[0] - a[1] * b[1],\n  a[0] * b[1] + a[1] * b[0],\n];\n/**\n * @ignore\n */\nconst unsafeDiv = (a, b) => [\n  (a[0] * b[0] + a[1] * b[1]) / unsafeL2(b),\n  (a[1] * b[0] - a[0] * b[1]) / unsafeL2(b),\n];\n/**\n * @ignore\n */\nconst unsafeSqrt = c => [\n  msqrt((c[0] + unsafeAbs(c)) / 2),\n  msqrt((-c[0] + unsafeAbs(c)) / 2) * msign(c[1]),\n];\n/**\n * @ignore\n */\nconst unsafeLn = c => [\n  mlog(unsafeAbs(c)),\n  unsafeArg(c),\n];\n/**\n * @ignore\n */\nconst unsafeExp = c => [\n  mexp(c[0]) * mcos(c[1]),\n  mexp(c[0]) * msin(c[1]),\n];\n/**\n * @ignore\n */\nconst unsafeCos = c => [mcos(c[0]) * mcosh(c[1]), -msin(c[0]) * msinh(c[1])];\n/**\n * @ignore\n */\nconst unsafeSin = c => [msin(c[0]) * mcosh(c[1]), mcos(c[0]) * msinh(c[1])];\n/**\n * @ignore\n */\nconst unsafeCosh = c => [mcosh(c[0]) * mcos(c[1]), msinh(c[0]) * msin(c[1])];\n/**\n * @ignore\n */\nconst unsafeSinh = c => [msinh(c[0]) * mcos(c[1]), mcosh(c[0]) * msin(c[1])];\n/**\n * @ignore\n */\nconst unsafeAsin = c => unsafeMul(\n  NI,\n  unsafeLn(\n    unsafeAdd(\n      unsafeMul(I, c),\n      unsafeSqrt(unsafeSub(ONE, unsafeMul(c, c))),\n    ),\n  ),\n);\n/**\n * @ignore\n */\nconst unsafeAcos = c => unsafeMul(\n  NI,\n  unsafeLn(\n    unsafeAdd(\n      c,\n      unsafeSqrt(unsafeSub(unsafeMul(c, c), ONE)),\n    ),\n  ),\n);\n/**\n * @ignore\n */\nconst unsafeAtan = c => unsafeMul(\n  HALF_I,\n  unsafeLn(\n    unsafeDiv(\n      [c[0], 1 + c[1]],\n      [-c[0], 1 - c[1]],\n    ),\n  ),\n);\n/**\n * @ignore\n */\nconst unsafeAsinh = (c) => {\n  const r = unsafeMul(c, c);\n  r[0] += 1;\n  return unsafeLn(unsafeAdd(c, unsafeSqrt(r)));\n};\n/**\n * @ignore\n */\nconst unsafeAcosh = (c) => {\n  const r = unsafeMul(c, c);\n  r[0] -= 1;\n  return unsafeLn(unsafeAdd(c, unsafeSqrt(r)));\n};\n/**\n * @ignore\n */\nconst unsafeAtanh = c => unsafeMul(\n  unsafeLn(unsafeDiv(\n    unsafeAdd(ONE, c),\n    unsafeSub(ONE, c),\n  )),\n  [0.5, 0],\n);\n/**\n * Checks if a value is a valid complex value.\n */\nexport const isComplex = x => (x instanceof Array && isNumber(x[0]) && isNumber(x[1]))\n  || x instanceof Float32Array\n  || x instanceof Float64Array;\n/**\n * Creates a zero complex value (different from ZERO)\n */\nexport const zero = () => [0, 0];\n/**\n * Solves the conjugate of a given complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const conjugate = c => (\n  (isComplex(c) && [c[0], -c[1]])\n  || (isNumber(c) && [c, 0])\n  || NAN\n);\n/**\n * Negates the given complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const negate = c => (\n  (isComplex(c) && [-c[0], -c[1]])\n  || (isNumber(c) && [-c, 0])\n  || NAN\n);\n\n/**\n * Adds two complex\n * @param {!complex} a\n * @param {!complex} b\n * Returns NaN complex if one of the given values is not a complex.\n */\nexport const add = (a, b) => (\n  (isComplex(a) && (\n    (isComplex(b) && unsafeAdd(a, b))\n    || (isNumber(b) && [a[0] + b, a[1]])\n  ))\n  || (isNumber(a) && (\n    (isComplex(b) && [a + b[0], b[1]])\n    || (isNumber(b) && [a + b, 0])\n  ))\n  || NAN\n);\n\n/**\n * Subtracts two complex\n * @param {!complex} a\n * @param {!complex} b\n * Returns NaN complex if one of the given values is not a complex.\n */\nexport const sub = (a, b) => (\n  (isComplex(a) && (\n    (isComplex(b) && unsafeSub(a, b))\n    || (isNumber(b) && [a[0] - b, a[1]])\n  ))\n  || (isNumber(a) && (\n    (isComplex(b) && [a - b[0], b[1]])\n    || (isNumber(b) && [a - b, 0])\n  ))\n  || NAN\n);\n\n/**\n * Multiplies two complex\n * @param {!complex} a\n * @param {!complex} b\n * Returns NaN complex if one of the given values is not a complex.\n */\nexport const mul = (a, b) => (\n  (isComplex(a) && (\n    (isComplex(b) && unsafeMul(a, b))\n    || (isNumber(b) && [a[0] * b, a[1] * b])\n  ))\n  || (isNumber(a) && (\n    (isComplex(b) && [a * b[0], a * b[1]])\n    || (isNumber(b) && [a * b, 0])\n  ))\n  || NAN\n);\n\n/**\n * Divides two complex\n * @param {!complex} a\n * @param {!complex} b\n * Returns NaN complex if one of the given values is not a complex.\n */\nexport const div = (a, b) => (\n  (isComplex(a) && (\n    (isComplex(b) && unsafeDiv(a, b))\n    || (isNumber(b) && [a[0] / b, a[1] / b])\n  ))\n  || (isNumber(a) && (\n    (isComplex(b) && [a / b[0], a / b[1]])\n    || (isNumber(b) && [a * b, 0])\n  ))\n  || NAN\n);\n\n/**\n * Returns the reciprocal of a complex\n * @param {!complex} c\n * Returns NaN complex if the given value is not a complex.\n */\nexport const reciprocal = c => (isComplex(c)\n  && [\n    c[0] / unsafeL2(c),\n    -c[1] / unsafeL2(c),\n  ])\n  || (isNumber(c) && [1 / c, 0])\n  || NAN;\n/**\n * Returns the modulus/magnitude of the complex\n * @param {!complex} c\n * @returns {number}\n * Returns NaN if the value is not a valid complex\n */\nexport const abs = c => (\n  (isComplex(c) && unsafeAbs(c))\n  || (isNumber(c) ? c : NaN)\n);\n\n/**\n * Returns the argument of a complex\n * @param {!complex} c\n * @returns {number}\n * Returns NaN if the value is not a valid complex.\n */\nexport const arg = c => (\n  (isComplex(c) && unsafeArg(c))\n  || (isNumber(c) ? 0 : NaN)\n);\n\n/**\n * Converts a radian value into a complex number.\n * @param {!number} x\n * @returns {complex}\n * Returns NaN if the value is not a number.\n */\nexport const euler = x => (\n  (isNumber(x) && [mcos(x), msin(x)])\n  || NAN\n);\n\n/**\n * Calculates the signum of a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const sign = c => (\n  (isComplex(c) && [c[0] / unsafeAbs(c), c[1] / unsafeAbs(c)])\n  || (isNumber(c) && [msign(c), 0])\n  || NAN\n);\n\n/**\n * Calculates the square root of a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const sqrt = c => (\n  (isComplex(c) && (\n    (eq(c[1], 0) && [msqrt(c[0]), 0])\n    || unsafeSqrt(c)\n  ))\n  || (isNumber(c) && [msqrt(c), 0])\n  || NAN\n);\n\n/**\n * Calculates the exponentiation of a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const exp = c => (\n  (isComplex(c) && unsafeExp(c))\n  || (isNumber(c) && [mexp(c), 0])\n  || NAN\n);\n\n/**\n * Calculates the natural logarithm of a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const ln = c => (\n  (isComplex(c) && unsafeLn(c))\n  || (isNumber(c) && [mlog(c), 0])\n  || NAN\n);\n\n/**\n * Calculates the base 10 logarithm of a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const log10 = c => (\n  (isComplex(c) && unsafeDiv(unsafeLn(c), BASE_10))\n  || (isNumber(c) && [mlog10(c), 0])\n  || NAN\n);\n\n/**\n * Raises the complex to the n-th complex power\n * @param {!complex} a\n * @param {!complex} b\n * @returns {complex}\n * Returns NaN complex if one of the given values is not a complex.\n */\nexport const pow = (a, b) => (\n  (isComplex(a) && isComplex(b) && unsafeExp(unsafeMul(unsafeLn(a), b)))\n  || (isNumber(a) && pow([a, 0], b))\n  || (isNumber(b) && pow(a, [b, 0]))\n  || NAN\n);\n\n/**\n * Applies a floor function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const floor = c => (\n  (isComplex(c) && [mfloor(c[0]), mfloor(c[1])])\n  || (isNumber(c) && [mfloor(c), 0])\n  || NAN\n);\n\n/**\n * Applies a ceiling function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const ceil = c => (\n  (isComplex(c) && [mceil(c[0]), mceil(c[1])])\n  || (isNumber(c) && [mceil(c), 0])\n  || NAN\n);\n\n/**\n * Converts polar coordinates into a complex\n * @param {!number} radius\n * @param {!number} phi\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const polar = (radius, phi) => (\n  (isNumber(radius) && isNumber(phi) && [radius * mcos(phi), radius * msin(phi)])\n  || NAN\n);\n\n/**\n * Applies a sine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const sin = c => (\n  (isComplex(c) && unsafeSin(c))\n  || (isNumber(c) && [msin(c), 0])\n  || NAN\n);\n\n/**\n * Applies a cosine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const cos = c => (\n  (isComplex(c) && unsafeCos(c))\n  || (isNumber(c) && [mcos(c), 0])\n  || NAN\n);\n\n/**\n * Applies a tangent function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const tan = c => (\n  (isComplex(c) && unsafeDiv(unsafeSin(c), unsafeCos(c)))\n  || (isNumber(c) && [mtan(c), 0])\n  || NAN\n);\n\n/**\n * Applies a inverse sine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const asin = c => (\n  (isComplex(c) && unsafeAsin(c))\n  || (isNumber(c) && [masin(c), 0])\n  || NAN\n);\n\n/**\n * Applies a inverse cosine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const acos = c => (\n  (isComplex(c) && unsafeAcos(c))\n  || (isNumber(c) && [macos(c), 0])\n  || NAN\n);\n\n/**\n * Applies a inverse tangent function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const atan = c => (\n  (isComplex(c) && unsafeAtan(c))\n  || (isNumber(c) && [matan(c), 0])\n  || NAN\n);\n\n/**\n * Applies a hyperbolic sine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const sinh = c => (\n  (isComplex(c) && unsafeSinh(c))\n  || (isNumber(c) && [msinh(c), 0])\n  || NAN\n);\n\n/**\n * Applies a hyperbolic cosine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const cosh = c => (\n  (isComplex(c) && unsafeCosh(c))\n  || (isNumber(c) && [mcosh(c), 0])\n  || NAN\n);\n\n/**\n * Applies a hyperbolic tangent function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const tanh = c => (\n  (isComplex(c) && unsafeDiv(unsafeSinh(c), unsafeCosh(c)))\n  || (isNumber(c) && [mtanh(c), 0])\n  || NAN\n);\n\n/**\n * Applies a hyperbolic inverse sine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const asinh = c => (\n  (isComplex(c) && unsafeAsinh(c))\n  || (isNumber(c) && [masinh(c), 0])\n  || NAN\n);\n\n/**\n * Applies a hyperbolic inverse cosine function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const acosh = c => (\n  (isComplex(c) && unsafeAcosh(c))\n  || (isNumber(c) && [macosh(c), 0])\n  || NAN\n);\n\n/**\n * Applies a hyperbolic inverse tangent function to a complex\n * @param {!complex} c\n * @returns {complex}\n * Returns NaN complex if the given value is not a complex.\n */\nexport const atanh = c => (\n  (isComplex(c) && unsafeAtanh(c))\n  || (isNumber(c) && [matanh(c), 0])\n  || NAN\n);\n\n/**\n * Check if two complex are equal\n * @param {!complex} a\n * @param {!complex} b\n * @returns {boolean}\n */\nexport const equals = (a, b) => (\n  (isComplex(a) && isComplex(b) && eq(a[0], b[0]) && eq(a[1], b[1]))\n  || a === b\n);\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/fast-complex/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "typedef",
    "name": "complex",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~complex",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Array",
        "Float32Array",
        "Float64Array",
        "number"
      ],
      "optional": false,
      "name": "complex"
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "sqrt",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~sqrt",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 35,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "masinh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~masinh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 45,
    "ignore": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "macosh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~macosh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 49,
    "ignore": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "matanh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~matanh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 53,
    "ignore": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "BASE_10",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~BASE_10",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 57,
    "ignore": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "TWO",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~TWO",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{TWO}",
    "description": "The value 2 in complex form",
    "lineNumber": 61,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "ONE",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~ONE",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{ONE}",
    "description": "The value 1 in complex form",
    "lineNumber": 65,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "ZERO",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~ZERO",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{ZERO}",
    "description": "The value 0 in complex form",
    "lineNumber": 69,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "I",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~I",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{I}",
    "description": "The square root of -1",
    "lineNumber": 73,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "HALF_I",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~HALF_I",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{HALF_I}",
    "description": "The square root of -1",
    "lineNumber": 77,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "NI",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~NI",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{NI}",
    "description": "The negative square root of -1",
    "lineNumber": 81,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "NAN",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~NAN",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{NAN}",
    "description": "A NaN complex",
    "lineNumber": 85,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "EPSILON",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~EPSILON",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 89,
    "ignore": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "eq",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~eq",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 93,
    "ignore": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "isNumber",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~isNumber",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 97,
    "ignore": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "unsafeL2",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeL2",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 101,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "unsafeAbs",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAbs",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 105,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "unsafeArg",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeArg",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 109,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "unsafeAdd",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAdd",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 113,
    "ignore": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "unsafeSub",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeSub",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 117,
    "ignore": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "unsafeMul",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeMul",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 121,
    "ignore": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "unsafeDiv",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeDiv",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 128,
    "ignore": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "unsafeSqrt",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeSqrt",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 135,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "unsafeLn",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeLn",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 142,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "unsafeExp",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeExp",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 149,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "unsafeCos",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeCos",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 156,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "unsafeSin",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeSin",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 160,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "unsafeCosh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeCosh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 164,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "unsafeSinh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeSinh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 168,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "unsafeAsin",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAsin",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 172,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "unsafeAcos",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAcos",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 184,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "unsafeAtan",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAtan",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 196,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "unsafeAsinh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAsinh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 208,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "unsafeAcosh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAcosh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 216,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "unsafeAtanh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~unsafeAtanh",
    "access": "public",
    "export": false,
    "importPath": "fast-complex/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 224,
    "ignore": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "isComplex",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~isComplex",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{isComplex}",
    "description": "Checks if a value is a valid complex value.",
    "lineNumber": 234,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "zero",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~zero",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{zero}",
    "description": "Creates a zero complex value (different from ZERO)",
    "lineNumber": 240,
    "params": [],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "conjugate",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~conjugate",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{conjugate}",
    "description": "Solves the conjugate of a given complex",
    "lineNumber": 247,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "negate",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~negate",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{negate}",
    "description": "Negates the given complex",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "add",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~add",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{add}",
    "description": "Adds two complex",
    "lineNumber": 270,
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Returns NaN complex if one of the given values is not a complex."
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "sub",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~sub",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{sub}",
    "description": "Subtracts two complex",
    "lineNumber": 288,
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Returns NaN complex if one of the given values is not a complex."
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "mul",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~mul",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{mul}",
    "description": "Multiplies two complex",
    "lineNumber": 306,
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Returns NaN complex if one of the given values is not a complex."
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "div",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~div",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{div}",
    "description": "Divides two complex",
    "lineNumber": 324,
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Returns NaN complex if one of the given values is not a complex."
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "reciprocal",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~reciprocal",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{reciprocal}",
    "description": "Returns the reciprocal of a complex",
    "lineNumber": 341,
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": "Returns NaN complex if the given value is not a complex."
      }
    ],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "abs",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~abs",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{abs}",
    "description": "Returns the modulus/magnitude of the complex",
    "lineNumber": 354,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}\nReturns NaN if the value is not a valid complex"
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Returns NaN if the value is not a valid complex"
    }
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "arg",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~arg",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{arg}",
    "description": "Returns the argument of a complex",
    "lineNumber": 365,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}\nReturns NaN if the value is not a valid complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Returns NaN if the value is not a valid complex."
    }
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "euler",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~euler",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{euler}",
    "description": "Converts a radian value into a complex number.",
    "lineNumber": 376,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN if the value is not a number."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN if the value is not a number."
    }
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "sign",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~sign",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{sign}",
    "description": "Calculates the signum of a complex",
    "lineNumber": 387,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "sqrt",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~sqrt",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{sqrt}",
    "description": "Calculates the square root of a complex",
    "lineNumber": 399,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "exp",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~exp",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{exp}",
    "description": "Calculates the exponentiation of a complex",
    "lineNumber": 414,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "ln",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~ln",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{ln}",
    "description": "Calculates the natural logarithm of a complex",
    "lineNumber": 426,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "log10",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~log10",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{log10}",
    "description": "Calculates the base 10 logarithm of a complex",
    "lineNumber": 438,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "pow",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~pow",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{pow}",
    "description": "Raises the complex to the n-th complex power",
    "lineNumber": 451,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if one of the given values is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if one of the given values is not a complex."
    }
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "floor",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~floor",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{floor}",
    "description": "Applies a floor function to a complex",
    "lineNumber": 464,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "ceil",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~ceil",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{ceil}",
    "description": "Applies a ceiling function to a complex",
    "lineNumber": 476,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "polar",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~polar",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{polar}",
    "description": "Converts polar coordinates into a complex",
    "lineNumber": 489,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": ""
      },
      {
        "nullable": false,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "phi",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "sin",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~sin",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{sin}",
    "description": "Applies a sine function to a complex",
    "lineNumber": 500,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "cos",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~cos",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{cos}",
    "description": "Applies a cosine function to a complex",
    "lineNumber": 512,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "tan",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~tan",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{tan}",
    "description": "Applies a tangent function to a complex",
    "lineNumber": 524,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "asin",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~asin",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{asin}",
    "description": "Applies a inverse sine function to a complex",
    "lineNumber": 536,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "acos",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~acos",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{acos}",
    "description": "Applies a inverse cosine function to a complex",
    "lineNumber": 548,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "atan",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~atan",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{atan}",
    "description": "Applies a inverse tangent function to a complex",
    "lineNumber": 560,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "sinh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~sinh",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{sinh}",
    "description": "Applies a hyperbolic sine function to a complex",
    "lineNumber": 572,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "cosh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~cosh",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{cosh}",
    "description": "Applies a hyperbolic cosine function to a complex",
    "lineNumber": 584,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "tanh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~tanh",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{tanh}",
    "description": "Applies a hyperbolic tangent function to a complex",
    "lineNumber": 596,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "asinh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~asinh",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{asinh}",
    "description": "Applies a hyperbolic inverse sine function to a complex",
    "lineNumber": 608,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "acosh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~acosh",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{acosh}",
    "description": "Applies a hyperbolic inverse cosine function to a complex",
    "lineNumber": 620,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "atanh",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~atanh",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{atanh}",
    "description": "Applies a hyperbolic inverse tangent function to a complex",
    "lineNumber": 632,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{complex}\nReturns NaN complex if the given value is not a complex."
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "complex"
      ],
      "spread": false,
      "description": "Returns NaN complex if the given value is not a complex."
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "equals",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~equals",
    "access": "public",
    "export": true,
    "importPath": "fast-complex/src/index.js",
    "importStyle": "{equals}",
    "description": "Check if two complex are equal",
    "lineNumber": 644,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": false,
        "types": [
          "complex"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "# fast-complex\n\nFaster complex numbers in JavaScript\n\n[![NPM](https://nodei.co/npm/fast-complex.png)](https://nodei.co/npm/fast-complex/)\n\n[![](https://data.jsdelivr.com/v1/package/npm/fast-complex/badge)](https://www.jsdelivr.com/package/npm/fast-complex)\n[![HitCount](http://hits.dwyl.io/lxsmnsyc/fast-complex.svg)](http://hits.dwyl.io/lxsmnsyc/fast-complex)\n\n| Platform | Build Status |\n| --- | --- |\n| Linux | [![Build Status](https://travis-ci.org/LXSMNSYC/fast-complex.svg?branch=master)](https://travis-ci.org/LXSMNSYC/fast-complex) |\n| Windows | [![Build status](https://ci.appveyor.com/api/projects/status/mkjwe462uk80axx4?svg=true)](https://ci.appveyor.com/project/LXSMNSYC/fast-complex) |\n\n\n[![codecov](https://codecov.io/gh/LXSMNSYC/fast-complex/branch/master/graph/badge.svg)](https://codecov.io/gh/LXSMNSYC/fast-complex)\n[![Known Vulnerabilities](https://snyk.io/test/github/LXSMNSYC/fast-complex/badge.svg?targetFile=package.json)](https://snyk.io/test/github/LXSMNSYC/fast-complex?targetFile=package.json)\n\n## Why\n\nMost complex number libraries avaiable in JavaScript are pretty slow, uses classes, and sometimes immutable. `fast-complex` aims to be fast (as all complex libraries should be).\n\n## Install\n\nNPM\n\n```bash\nnpm i fast-complex\n```\n\nCDN\n\n* jsDelivr\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/rx-cancellable/dist/index.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/rx-scheduler/dist/index.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/fast-complex/dist/index.min.js\"></script>\n```\n\n* unpkg\n```html\n<script src=\"https://unpkg.com/rx-cancellable/dist/index.min.js\"></script>\n<script src=\"https://unpkg.com/rx-scheduler/dist/index.min.js\"></script>\n<script src=\"https://unpkg.com/fast-complex/dist/index.min.js\"></script>\n```\n\n## Usage\n\n### Loading the module\n\n#### CommonJS\n\n```js\nconst Complex = require('fast-complex');\n```\n\nLoading the CommonJS module provides the Complex object.\n\n#### Browser\n\nLoading the JavaScript file for the fast-complex provides the Complex object\n\n## Documentation\n\nYou can read the documentation at the [official doc site](https://lxsmnsyc.github.io/fast-complex/)\n\n## Build\n\nClone the repo first, then run the following to install the dependencies\n\n```bash\nnpm install\n```\n\nTo build the coverages, run the test suite, the docs, and the distributable modules:\n\n```bash\nnpm run build\n```\n\n## Benchmarks\n\nBenchmark against [complex.js](https://www.npmjs.com/package/complex.js)\n\n```\nabs:\ncomplex.js#abs x 10,039,416 ops/sec ±1.67% (90 runs sampled)\nfast-complex#abs x 253,710,638 ops/sec ±0.36% (93 runs sampled)\nFastest is fast-complex#abs\n\nacos:\ncomplex.js#acos x 2,964,673 ops/sec ±1.64% (95 runs sampled)\nfast-complex#acos x 48,972,731 ops/sec ±0.81% (91 runs sampled)\nFastest is fast-complex#acos\n\nacosh:\ncomplex.js#acosh x 3,616,264 ops/sec ±0.72% (94 runs sampled)\nfast-complex#acosh x 900,426,250 ops/sec ±0.12% (91 runs sampled)\nFastest is fast-complex#acosh\n\nadd:\ncomplex.js#add x 4,144,553 ops/sec ±3.72% (86 runs sampled)\nfast-complex#add x 34,798,287 ops/sec ±0.99% (92 runs sampled)\nFastest is fast-complex#add\n\narg:\ncomplex.js#arg x 10,245,874 ops/sec ±1.10% (95 runs sampled)\nfast-complex#arg x 249,870,711 ops/sec ±0.55% (92 runs sampled)\nFastest is fast-complex#arg\n\nasin:\ncomplex.js#asin x 2,879,374 ops/sec ±2.12% (93 runs sampled)\nfast-complex#asin x 10,156,487 ops/sec ±1.72% (71 runs sampled)\nFastest is fast-complex#asin\n\nasinh:\ncomplex.js#asinh x 3,549,738 ops/sec ±0.60% (95 runs sampled)\nfast-complex#asinh x 859,111,642 ops/sec ±0.10% (96 runs sampled)\nFastest is fast-complex#asinh\n\natan:\ncomplex.js#atan x 4,704,238 ops/sec ±0.57% (96 runs sampled)\nfast-complex#atan x 858,674,145 ops/sec ±0.11% (97 runs sampled)\nFastest is fast-complex#atan\n\natanh:\ncomplex.js#atanh x 7,526,830 ops/sec ±0.39% (96 runs sampled)\nfast-complex#atanh x 860,865,020 ops/sec ±0.28% (91 runs sampled)\nFastest is fast-complex#atanh\n\nceil:\ncomplex.js#ceil x 8,943,458 ops/sec ±0.70% (90 runs sampled)\nfast-complex#ceil x 887,247,178 ops/sec ±0.11% (94 runs sampled)\nFastest is fast-complex#ceil\n\nconjugate:\ncomplex.js#conjugate x 8,706,364 ops/sec ±0.56% (94 runs sampled)\nfast-complex#conjugate x 890,126,063 ops/sec ±0.05% (97 runs sampled)\nFastest is fast-complex#conjugate\n\ncos:\ncomplex.js#cos x 6,182,278 ops/sec ±0.67% (94 runs sampled)\nfast-complex#cos x 887,072,837 ops/sec ±0.14% (97 runs sampled)\nFastest is fast-complex#cos\n\ncosh:\ncomplex.js#cosh x 5,631,226 ops/sec ±5.49% (81 runs sampled)\nfast-complex#cosh x 884,864,879 ops/sec ±0.21% (96 runs sampled)\nFastest is fast-complex#cosh\n\ndiv:\ncomplex.js#div x 3,544,837 ops/sec ±2.16% (92 runs sampled)\nfast-complex#div x 33,865,117 ops/sec ±0.75% (90 runs sampled)\nFastest is fast-complex#div\n\neuler:\ncomplex.js#new(cos, sin) x 8,997,733 ops/sec ±6.60% (82 runs sampled)\nfast-complex#euler x 869,767,967 ops/sec ±0.86% (89 runs sampled)\nFastest is fast-complex#euler\n\nexp:\ncomplex.js#exp x 6,603,115 ops/sec ±2.62% (90 runs sampled)\nfast-complex#exp x 886,943,718 ops/sec ±0.14% (93 runs sampled)\nFastest is fast-complex#exp\n\nfloor:\ncomplex.js#floor x 8,693,352 ops/sec ±1.56% (89 runs sampled)\nfast-complex#floor x 837,131,468 ops/sec ±10.72% (93 runs sampled)\nFastest is fast-complex#floor\n\nln:\ncomplex.js#log x 5,940,980 ops/sec ±1.11% (91 runs sampled)\nfast-complex#ln x 889,932,525 ops/sec ±0.25% (95 runs sampled)\nFastest is fast-complex#ln\n\nlog10:\ncomplex.js#log(10) x 3,534,550 ops/sec ±1.87% (91 runs sampled)\nfast-complex#log10 x 901,223,154 ops/sec ±0.29% (93 runs sampled)\nFastest is fast-complex#log10\n\nmul:\ncomplex.js#mul x 4,046,062 ops/sec ±3.02% (87 runs sampled)\nfast-complex#mul x 32,582,306 ops/sec ±1.38% (91 runs sampled)\nFastest is fast-complex#mul\n\nnegate:\ncomplex.js#negate x 8,080,732 ops/sec ±3.24% (89 runs sampled)\nfast-complex#negate x 887,635,825 ops/sec ±0.21% (96 runs sampled)\nFastest is fast-complex#negate\n\npow:\ncomplex.js#pow x 3,039,429 ops/sec ±0.53% (93 runs sampled)\nfast-complex#pow x 17,816,696 ops/sec ±0.86% (90 runs sampled)\nFastest is fast-complex#pow\n\nreciprocal:\ncomplex.js#inverse x 5,887,831 ops/sec ±6.41% (74 runs sampled)\nfast-complex#reciprocal x 862,676,299 ops/sec ±0.69% (91 runs sampled)\nFastest is fast-complex#reciprocal\n\nsign:\ncomplex.js#sign x 7,629,057 ops/sec ±1.15% (90 runs sampled)\nfast-complex#sign x 885,903,525 ops/sec ±0.17% (95 runs sampled)\nFastest is fast-complex#sign\n\nsin:\ncomplex.js#sin x 6,033,439 ops/sec ±1.14% (89 runs sampled)\nfast-complex#sin x 885,824,855 ops/sec ±0.16% (99 runs sampled)\nFastest is fast-complex#sin\n\nsinh:\ncomplex.js#sinh x 6,633,315 ops/sec ±0.66% (93 runs sampled)\nfast-complex#sinh x 908,339,848 ops/sec ±0.45% (95 runs sampled)\nFastest is fast-complex#sinh\n\nsqrt:\ncomplex.js#sqrt x 7,281,135 ops/sec ±0.67% (95 runs sampled)\nfast-complex#sqrt x 233,432,387 ops/sec ±1.23% (94 runs sampled)\nFastest is fast-complex#sqrt\n\nsub:\ncomplex.js#sub x 4,310,852 ops/sec ±1.86% (89 runs sampled)\nfast-complex#sub x 27,965,287 ops/sec ±6.10% (76 runs sampled)\nFastest is fast-complex#sub\n\ntan:\ncomplex.js#tan x 5,408,402 ops/sec ±1.50% (94 runs sampled)\nfast-complex#tan x 894,806,714 ops/sec ±0.41% (95 runs sampled)\nFastest is fast-complex#tan\n\ntanh:\ncomplex.js#tanh x 5,560,661 ops/sec ±0.28% (91 runs sampled)\nfast-complex#tanh x 871,009,086 ops/sec ±0.17% (98 runs sampled)\nFastest is fast-complex#tanh\n```",
    "longname": "/home/snd-admin/Desktop/Repos/fast-complex/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"fast-complex\",\n  \"version\": \"0.1.0\",\n  \"description\": \"Fast complex numbers in JavaScript\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"linux-mocha\": \"./node_modules/.bin/mocha --require @babel/register -R spec --recursive\",\n    \"linux-test\": \"./node_modules/.bin/nyc --reporter=html npm run linux-mocha\",\n    \"linux-docs\": \"./node_modules/.bin/esdoc\",\n    \"linux-cjs\": \"./node_modules/.bin/rollup src/index.js --format cjs --name \\\"Complex\\\" --file index.js\",\n    \"linux-browser\": \"./node_modules/.bin/rollup src/index.js --format iife --name \\\"Complex\\\" --file dist/index.js\",\n    \"linux-minify\": \"npm run linux-browser && ./node_modules/.bin/terser dist/index.js --compress --mangle --output dist/index.min.js\",\n    \"linux-build\": \"npm run linux-cjs && npm run linux-minify && npm run linux-docs && npm run linux-test\",\n    \"win-mocha\": \"node node_modules/mocha/bin/mocha --require @babel/register -R spec --recursive\",\n    \"win-test\": \"node node_modules/nyc/bin/nyc.js --reporter=html npm run win-mocha\",\n    \"win-docs\": \"node node_modules/esdoc/out/src/ESDocCLI.js\",\n    \"win-cjs\": \"node node_modules/.bin/rollup src/index.js --format cjs --name \\\"Complex\\\" --file index.js\",\n    \"win-browser\": \"node node_modules/.bin/rollup src/index.js --format iife --name \\\"Complex\\\" --file dist/index.js\",\n    \"win-minify\": \"npm run win-browser && node node_modules/.bin/terser dist/index.js --compress --mangle --output dist/index.min.js\",\n    \"win-build\": \"npm run win-cjs && npm run win-minify && npm run win-docs && npm run win-test\",\n    \"mocha\": \"npm run linux-mocha || npm run win-mocha\",\n    \"test\": \"npm run linux-test || npm run win-test\",\n    \"docs\": \"npm run linux-docs || npm run win-docs\",\n    \"cjs\": \"npm run linux-cjs || npm run win-cjs\",\n    \"browser\": \"npm run linux-browser || npm run win-browser\",\n    \"minify\": \"npm run linux-minify || npm run win-minify\",\n    \"build\": \"npm run cjs && npm run minify && npm run docs && npm test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/LXSMNSYC/fast-complex.git\"\n  },\n  \"keywords\": [\n    \"complex\"\n  ],\n  \"author\": \"LXSMNSYC (alexis.munsayac@gmail.com)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/LXSMNSYC/fast-complex/issues\"\n  },\n  \"homepage\": \"https://github.com/LXSMNSYC/fast-complex#readme\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.4.4\",\n    \"@babel/preset-env\": \"^7.4.4\",\n    \"@babel/register\": \"^7.4.4\",\n    \"benchmark\": \"^2.1.4\",\n    \"complex.js\": \"^2.0.11\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-integrate-test-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.16.0\",\n    \"eslint-config-airbnb-base\": \"^13.1.0\",\n    \"eslint-plugin-import\": \"^2.17.2\",\n    \"mocha\": \"^6.1.4\",\n    \"nyc\": \"^14.0.0\",\n    \"rollup\": \"^1.10.1\",\n    \"terser\": \"^3.17.0\"\n  }\n}\n",
    "longname": "/home/snd-admin/Desktop/Repos/fast-complex/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 119,
    "kind": "testFile",
    "name": "test/index.js",
    "content": "/* eslint-disable no-restricted-globals */\n/* eslint-disable no-undef */\nimport assert from 'assert';\nimport {\n  conjugate, I, NAN, zero,\n  negate, ONE, NI, abs,\n  acos, equals, acosh, asinh,\n  asin, atan, atanh, tanh,\n  tan, sinh, sin, cos,\n  cosh, ceil, floor, exp,\n  ln, log10, sqrt, euler,\n  polar, sign, add, div,\n  mul,\n  pow,\n  sub,\n  reciprocal,\n  arg,\n} from '../src';\n\ndescribe('fast-complex', () => {\n  /**\n   *\n   */\n  describe('abs', () => {\n    it('should return a number', () => {\n      assert(typeof abs([1, 0]) === 'number');\n    });\n    it('should return the vector length of the complex', () => {\n      assert(abs([1, 0]) === 1);\n    });\n    it('should return the same value if the given value is a number', () => {\n      assert(abs(1) === 1);\n    });\n    it('should return NaN if the given value is not a complex.', () => {\n      assert(isNaN(abs()));\n    });\n  });\n  /**\n   *\n   */\n  describe('acos', () => {\n    it('should return an Array', () => {\n      assert(acos([1, 0]) instanceof Array);\n    });\n    it('should return the inverse cosine of the complex', () => {\n      assert(equals(acos([1, 1]), [0.9045568943023813, -1.0612750619050355]));\n    });\n    it('should return the inverse cosine complex of the given number', () => {\n      assert(equals(acos(1), [Math.acos(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === acos());\n    });\n  });\n  /**\n   *\n   */\n  describe('acosh', () => {\n    it('should return an Array', () => {\n      assert(acosh([1, 0]) instanceof Array);\n    });\n    it('should return the hyperbolic inverse cosine of the complex', () => {\n      assert(equals(acosh([1, 1]), [1.0612750619050355, 0.9045568943023813]));\n    });\n    it('should return the hyperbolic inverse cosine complex of the given number', () => {\n      assert(equals(acosh(1), [Math.acosh(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === acosh());\n    });\n  });\n  /**\n   *\n   */\n  describe('add', () => {\n    it('should return an Array', () => {\n      assert(add([1, 1], [1, 1]) instanceof Array);\n    });\n    it('should return the sum of two complex', () => {\n      assert.deepEqual(add([1, 1], [1, 1]), [2, 2]);\n    });\n    it('should return the sum of a complex and a number', () => {\n      assert.deepEqual(add([1, 1], 1), [2, 1]);\n    });\n    it('should return the sum of a number and a complex', () => {\n      assert.deepEqual(add(1, [1, 1]), [2, 1]);\n    });\n    it('should return the sum of a number and a number', () => {\n      assert.deepEqual(add(1, 1), [2, 0]);\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === add());\n    });\n  });\n  /**\n   *\n   */\n  describe('arg', () => {\n    const eq = (a, b) => Math.abs(a - b) <= 1e7 * Math.max(1, Math.abs(a), Math.abs(b));\n    it('should return a number', () => {\n      assert(typeof arg([1, 0]) === 'number');\n    });\n    it('should return the angle of the complex', () => {\n      assert(eq(arg([1, 1]), 1.1071487177940904));\n    });\n    it('should return 0 if the given value is a number', () => {\n      assert(eq(arg(1), 0));\n    });\n    it('should return NaN if the given value is not a complex.', () => {\n      assert(isNaN(arg()));\n    });\n  });\n  /**\n   *\n   */\n  describe('asin', () => {\n    it('should return an Array', () => {\n      assert(asin([1, 0]) instanceof Array);\n    });\n    it('should return the inverse sine of the complex', () => {\n      assert(equals(asin([1, 1]), [0.6662394324925153, 1.0612750619050355]));\n    });\n    it('should return the inverse sine complex of the given number', () => {\n      assert(equals(asin(1), [Math.asin(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === asin());\n    });\n  });\n  /**\n   *\n   */\n  describe('asinh', () => {\n    it('should return an Array', () => {\n      assert(asinh([1, 0]) instanceof Array);\n    });\n    it('should return the hyperbolic inverse sine of the complex', () => {\n      assert(equals(asinh([1, 1]), [1.0612750619050357, 0.6662394324925153]));\n    });\n    it('should return the hyperbolic inverse sine complex of the given number', () => {\n      assert(equals(asinh(1), [Math.asinh(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === asinh());\n    });\n  });\n  /**\n   *\n   */\n  describe('atan', () => {\n    it('should return an Array', () => {\n      assert(atan([1, 0]) instanceof Array);\n    });\n    it('should return the inverse tangent of the complex', () => {\n      assert(equals(atan([1, 1]), [1.0172219678978514, 0.40235947810852507]));\n    });\n    it('should return the inverse tangent complex of the given number', () => {\n      assert(equals(atan(1), [Math.atan(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === atan());\n    });\n  });\n  /**\n   *\n   */\n  describe('atanh', () => {\n    it('should return an Array', () => {\n      assert(atanh([1, 0]) instanceof Array);\n    });\n    it('should return the hyperbolic inverse tangent of the complex', () => {\n      assert(equals(atanh([1, 1]), [0.4023594781085251, 1.0172219678978514]));\n    });\n    it('should return the hyperbolic inverse tangent complex of the given number', () => {\n      assert(equals(atanh(0.5), [Math.atanh(0.5), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === atanh());\n    });\n  });\n  /**\n   *\n   */\n  describe('ceil', () => {\n    it('should return an Array', () => {\n      assert(ceil([1, 0]) instanceof Array);\n    });\n    it('should return the ceiling of the complex', () => {\n      assert(equals(ceil([0.5, 0.5]), [1, 1]));\n    });\n    it('should return the ceiling complex of the given number', () => {\n      assert(equals(ceil(0.5), [Math.ceil(0.5), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === ceil());\n    });\n  });\n  /**\n   *\n   */\n  describe('conjugate', () => {\n    it('should return an Array', () => {\n      assert(conjugate(I) instanceof Array);\n    });\n    it('should negate the imaginary part of a complex', () => {\n      assert.deepEqual(conjugate(I), NI);\n    });\n    it('should return an Array which real part is that of the value if the value is a number.', () => {\n      assert.deepEqual(conjugate(1), ONE);\n    });\n    it('should return a NaN complex if the given value is not a complex.', () => {\n      assert(conjugate() === NAN);\n    });\n  });\n  /**\n   *\n   */\n  describe('cos', () => {\n    it('should return an Array', () => {\n      assert(cos([1, 0]) instanceof Array);\n    });\n    it('should return the cosine of the complex', () => {\n      assert(equals(cos([1, 1]), [0.8337300251311491, -0.9888977057628651]));\n    });\n    it('should return the cosine complex of the given number', () => {\n      assert(equals(cos(1), [Math.cos(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === cos());\n    });\n  });\n  /**\n   *\n   */\n  describe('cosh', () => {\n    it('should return an Array', () => {\n      assert(cosh([1, 0]) instanceof Array);\n    });\n    it('should return the hyperbolic cosine of the complex', () => {\n      assert(equals(cosh([1, 1]), [0.8337300251311491, 0.9888977057628651]));\n    });\n    it('should return the hyperbolic cosine complex of the given number', () => {\n      assert(equals(cosh(1), [Math.cosh(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === cosh());\n    });\n  });\n  /**\n   *\n   */\n  describe('div', () => {\n    it('should return an Array', () => {\n      assert(div([1, 1], [1, 1]) instanceof Array);\n    });\n    it('should return the quotient of two complex', () => {\n      assert.deepEqual(div([1, 1], [1, 1]), [1, 0]);\n    });\n    it('should return the quotient of a complex and a number', () => {\n      assert.deepEqual(div([1, 1], 1), [1, 1]);\n    });\n    it('should return the quotient of a number and a complex', () => {\n      assert.deepEqual(div(1, [1, 1]), [1, 1]);\n    });\n    it('should return the quotient of a number and a number', () => {\n      assert.deepEqual(div(1, 1), [1, 0]);\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === div());\n    });\n  });\n  /**\n   *\n   */\n  describe('exp', () => {\n    it('should return an Array', () => {\n      assert(exp([1, 0]) instanceof Array);\n    });\n    it('should return the exp of the complex', () => {\n      assert(equals(exp([1, 1]), [1.4686939399158851, 2.2873552871788423]));\n    });\n    it('should return the ceiling complex of the given number', () => {\n      assert(equals(exp(1), [Math.exp(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === exp());\n    });\n  });\n  /**\n   *\n   */\n  describe('euler', () => {\n    it('should return an Array', () => {\n      assert(euler(1) instanceof Array);\n    });\n    it('should return the euler of the complex', () => {\n      assert(equals(euler(1), [0.5403023058681398, 0.8414709848078965]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === euler());\n    });\n  });\n  /**\n   *\n   */\n  describe('floor', () => {\n    it('should return an Array', () => {\n      assert(floor([1, 0]) instanceof Array);\n    });\n    it('should return the floor of the complex', () => {\n      assert(equals(floor([0.5, 0.5]), [0, 0]));\n    });\n    it('should return the ceiling complex of the given number', () => {\n      assert(equals(floor(0.5), [Math.floor(0.5), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === floor());\n    });\n  });\n  /**\n   *\n   */\n  describe('ln', () => {\n    it('should return an Array', () => {\n      assert(ln([1, 0]) instanceof Array);\n    });\n    it('should return the ln of the complex', () => {\n      assert(equals(ln([1, 1]), [0.34657359027997264, 0.7853981633974483]));\n    });\n    it('should return the ceiling complex of the given number', () => {\n      assert(equals(ln(1), [Math.log(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === ln());\n    });\n  });\n  /**\n   *\n   */\n  describe('log10', () => {\n    it('should return an Array', () => {\n      assert(log10([1, 0]) instanceof Array);\n    });\n    it('should return the log10 of the complex', () => {\n      assert(equals(log10([1, 1]), [0.15051499783199057, 0.3410940884604603]));\n    });\n    it('should return the ceiling complex of the given number', () => {\n      assert(equals(log10(1), [Math.log10(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === log10());\n    });\n  });\n  /**\n   *\n   */\n  describe('mul', () => {\n    it('should return an Array', () => {\n      assert(mul([1, 1], [1, 1]) instanceof Array);\n    });\n    it('should return the product of two complex', () => {\n      assert.deepEqual(mul([1, 1], [1, 0]), [1, 1]);\n    });\n    it('should return the product of a complex and a number', () => {\n      assert.deepEqual(mul([1, 1], 1), [1, 1]);\n    });\n    it('should return the product of a number and a complex', () => {\n      assert.deepEqual(mul(1, [1, 1]), [1, 1]);\n    });\n    it('should return the product of a number and a number', () => {\n      assert.deepEqual(mul(1, 1), [1, 0]);\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === mul());\n    });\n  });\n  /**\n   *\n   */\n  describe('negate', () => {\n    it('should return an Array', () => {\n      assert(negate(ONE) instanceof Array);\n    });\n    it('should negate the real and imaginary part of a complex', () => {\n      assert.deepEqual(negate([1, 1]), [-1, -1]);\n    });\n    it('should return an Array which real part is that of the value if the negated value is a number.', () => {\n      assert.deepEqual(negate(1), [-1, 0]);\n    });\n    it('should return a NaN complex if the given value is not a complex.', () => {\n      assert(negate() === NAN);\n    });\n  });\n  /**\n   *\n   */\n  describe('polar', () => {\n    it('should return an Array', () => {\n      assert(polar(1, 1) instanceof Array);\n    });\n    it('should return the polar of the complex', () => {\n      assert(equals(polar(1, 1), [0.5403023058681398, 0.8414709848078965]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === polar());\n    });\n  });\n  /**\n   *\n   */\n  describe('pow', () => {\n    it('should return an Array', () => {\n      assert(pow([1, 1], [1, 1]) instanceof Array);\n    });\n    it('should return the power of two complex', () => {\n      assert(equals(pow([1, 1], [1, 0]), [1, 1]));\n    });\n    it('should return the power of a complex and a number', () => {\n      assert(equals(pow([1, 1], 1), [1, 1]));\n    });\n    it('should return the power of a number and a complex', () => {\n      assert(equals(pow(1, [1, 1]), [1, 0]));\n    });\n    it('should return the power of a number and a number', () => {\n      assert(equals(pow(1, 1), [1, 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === pow());\n    });\n  });\n  /**\n   *\n   */\n  describe('reciprocal', () => {\n    it('should return an Array', () => {\n      assert(reciprocal([1, 0]) instanceof Array);\n    });\n    it('should return the reciprocal of the complex', () => {\n      assert(equals(reciprocal([1, 1]), [0.5, -0.5]));\n    });\n    it('should return the reciprocal complex of the given number', () => {\n      assert(equals(reciprocal(1), [1, 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === reciprocal());\n    });\n  });\n  /**\n   *\n   */\n  describe('sign', () => {\n    it('should return an Array', () => {\n      assert(sign([1, 0]) instanceof Array);\n    });\n    it('should return the sine of the complex', () => {\n      assert(equals(sign([1, 1]), [0.7071067811865475, 0.7071067811865475]));\n    });\n    it('should return the sine complex of the given number', () => {\n      assert(equals(sign(1), [Math.sign(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === sign());\n    });\n  });\n  /**\n   *\n   */\n  describe('sin', () => {\n    it('should return an Array', () => {\n      assert(sin([1, 0]) instanceof Array);\n    });\n    it('should return the sine of the complex', () => {\n      assert(equals(sin([1, 1]), [1.2984575814159773, 0.6349639147847361]));\n    });\n    it('should return the sine complex of the given number', () => {\n      assert(equals(sin(1), [Math.sin(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === sin());\n    });\n  });\n  /**\n   *\n   */\n  describe('sinh', () => {\n    it('should return an Array', () => {\n      assert(sinh([1, 0]) instanceof Array);\n    });\n    it('should return the hyperbolic sine of the complex', () => {\n      assert(equals(sinh([1, 1]), [0.6349639147847361, 1.2984575814159773]));\n    });\n    it('should return the hyperbolic sine complex of the given number', () => {\n      assert(equals(sinh(1), [Math.sinh(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === sinh());\n    });\n  });\n  /**\n   *\n   */\n  describe('sqrt', () => {\n    it('should return an Array', () => {\n      assert(sqrt([1, 0]) instanceof Array);\n    });\n    it('should return the log10 of the complex', () => {\n      assert(equals(sqrt([1, 1]), [1.09868411346781, 0.45508986056222733]));\n    });\n    it('should return the square root complex of the given number', () => {\n      assert(equals(sqrt(1), [Math.sqrt(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === sqrt());\n    });\n  });\n  /**\n   *\n   */\n  describe('sub', () => {\n    it('should return an Array', () => {\n      assert(sub([1, 1], [1, 1]) instanceof Array);\n    });\n    it('should return the power of two complex', () => {\n      assert(equals(sub([1, 1], [1, 1]), [0, 0]));\n    });\n    it('should return the power of a complex and a number', () => {\n      assert(equals(sub([1, 1], 1), [0, 1]));\n    });\n    it('should return the power of a number and a complex', () => {\n      assert(equals(sub(1, [1, 1]), [0, 1]));\n    });\n    it('should return the power of a number and a number', () => {\n      assert(equals(sub(1, 1), [0, 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === sub());\n    });\n  });\n  /**\n   *\n   */\n  describe('tan', () => {\n    it('should return an Array', () => {\n      assert(tan([1, 0]) instanceof Array);\n    });\n    it('should return the tangent of the complex', () => {\n      assert(equals(tan([1, 1]), [0.27175258531951174, 1.0839233273386948]));\n    });\n    it('should return the tangent complex of the given number', () => {\n      assert(equals(tan(1), [Math.tan(1), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === tan());\n    });\n  });\n  /**\n   *\n   */\n  describe('tanh', () => {\n    it('should return an Array', () => {\n      assert(tanh([1, 0]) instanceof Array);\n    });\n    it('should return the hyperbolic tangent of the complex', () => {\n      assert(equals(tanh([1, 1]), [1.0839233273386948, 0.27175258531951174]));\n    });\n    it('should return the hyperbolic tangent complex of the given number', () => {\n      assert(equals(tanh(0.5), [Math.tanh(0.5), 0]));\n    });\n    it('should return NaN Complex if the given value is not a complex.', () => {\n      assert(NAN === tanh());\n    });\n  });\n  /**\n   *\n   */\n  describe('zero', () => {\n    it('should return an Array', () => {\n      assert(zero() instanceof Array);\n    });\n    it('should return a complex with 0 real and imaginary part.', () => {\n      const x = zero();\n      assert(x[0] === 0 && x[1] === 0);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/fast-complex/test/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/index.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/index.js~describe0",
    "access": "public",
    "description": "fast-complex",
    "lineNumber": 20
  },
  {
    "__docId__": 121,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe1",
    "access": "public",
    "description": "abs",
    "lineNumber": 24
  },
  {
    "__docId__": 122,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/index.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe1.it2",
    "access": "public",
    "description": "should return a number",
    "lineNumber": 25
  },
  {
    "__docId__": 123,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/index.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe1.it3",
    "access": "public",
    "description": "should return the vector length of the complex",
    "lineNumber": 28
  },
  {
    "__docId__": 124,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "test/index.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe1.it4",
    "access": "public",
    "description": "should return the same value if the given value is a number",
    "lineNumber": 31
  },
  {
    "__docId__": 125,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/index.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe1.it5",
    "access": "public",
    "description": "should return NaN if the given value is not a complex.",
    "lineNumber": 34
  },
  {
    "__docId__": 126,
    "kind": "test",
    "name": "describe6",
    "testId": 6,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe6",
    "access": "public",
    "description": "acos",
    "lineNumber": 41
  },
  {
    "__docId__": 127,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/index.js~describe0.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe6.it7",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 42
  },
  {
    "__docId__": 128,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "test/index.js~describe0.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe6.it8",
    "access": "public",
    "description": "should return the inverse cosine of the complex",
    "lineNumber": 45
  },
  {
    "__docId__": 129,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/index.js~describe0.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe6.it9",
    "access": "public",
    "description": "should return the inverse cosine complex of the given number",
    "lineNumber": 48
  },
  {
    "__docId__": 130,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "test/index.js~describe0.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe6.it10",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 51
  },
  {
    "__docId__": 131,
    "kind": "test",
    "name": "describe11",
    "testId": 11,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe11",
    "access": "public",
    "description": "acosh",
    "lineNumber": 58
  },
  {
    "__docId__": 132,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "test/index.js~describe0.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe11.it12",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 59
  },
  {
    "__docId__": 133,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "test/index.js~describe0.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe11.it13",
    "access": "public",
    "description": "should return the hyperbolic inverse cosine of the complex",
    "lineNumber": 62
  },
  {
    "__docId__": 134,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/index.js~describe0.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe11.it14",
    "access": "public",
    "description": "should return the hyperbolic inverse cosine complex of the given number",
    "lineNumber": 65
  },
  {
    "__docId__": 135,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/index.js~describe0.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe11.it15",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 68
  },
  {
    "__docId__": 136,
    "kind": "test",
    "name": "describe16",
    "testId": 16,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe16",
    "access": "public",
    "description": "add",
    "lineNumber": 75
  },
  {
    "__docId__": 137,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "test/index.js~describe0.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe16.it17",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 76
  },
  {
    "__docId__": 138,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/index.js~describe0.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe16.it18",
    "access": "public",
    "description": "should return the sum of two complex",
    "lineNumber": 79
  },
  {
    "__docId__": 139,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "test/index.js~describe0.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe16.it19",
    "access": "public",
    "description": "should return the sum of a complex and a number",
    "lineNumber": 82
  },
  {
    "__docId__": 140,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/index.js~describe0.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe16.it20",
    "access": "public",
    "description": "should return the sum of a number and a complex",
    "lineNumber": 85
  },
  {
    "__docId__": 141,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "test/index.js~describe0.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe16.it21",
    "access": "public",
    "description": "should return the sum of a number and a number",
    "lineNumber": 88
  },
  {
    "__docId__": 142,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "test/index.js~describe0.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe16.it22",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 91
  },
  {
    "__docId__": 143,
    "kind": "test",
    "name": "describe23",
    "testId": 23,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe23",
    "access": "public",
    "description": "arg",
    "lineNumber": 98
  },
  {
    "__docId__": 144,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "test/index.js~describe0.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe23.it24",
    "access": "public",
    "description": "should return a number",
    "lineNumber": 100
  },
  {
    "__docId__": 145,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/index.js~describe0.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe23.it25",
    "access": "public",
    "description": "should return the angle of the complex",
    "lineNumber": 103
  },
  {
    "__docId__": 146,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/index.js~describe0.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe23.it26",
    "access": "public",
    "description": "should return 0 if the given value is a number",
    "lineNumber": 106
  },
  {
    "__docId__": 147,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "test/index.js~describe0.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe23.it27",
    "access": "public",
    "description": "should return NaN if the given value is not a complex.",
    "lineNumber": 109
  },
  {
    "__docId__": 148,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe28",
    "access": "public",
    "description": "asin",
    "lineNumber": 116
  },
  {
    "__docId__": 149,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/index.js~describe0.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe28.it29",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 117
  },
  {
    "__docId__": 150,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/index.js~describe0.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe28.it30",
    "access": "public",
    "description": "should return the inverse sine of the complex",
    "lineNumber": 120
  },
  {
    "__docId__": 151,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "test/index.js~describe0.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe28.it31",
    "access": "public",
    "description": "should return the inverse sine complex of the given number",
    "lineNumber": 123
  },
  {
    "__docId__": 152,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "test/index.js~describe0.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe28.it32",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 126
  },
  {
    "__docId__": 153,
    "kind": "test",
    "name": "describe33",
    "testId": 33,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe33",
    "access": "public",
    "description": "asinh",
    "lineNumber": 133
  },
  {
    "__docId__": 154,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "test/index.js~describe0.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe33.it34",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 134
  },
  {
    "__docId__": 155,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "test/index.js~describe0.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe33.it35",
    "access": "public",
    "description": "should return the hyperbolic inverse sine of the complex",
    "lineNumber": 137
  },
  {
    "__docId__": 156,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "test/index.js~describe0.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe33.it36",
    "access": "public",
    "description": "should return the hyperbolic inverse sine complex of the given number",
    "lineNumber": 140
  },
  {
    "__docId__": 157,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "test/index.js~describe0.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe33.it37",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 143
  },
  {
    "__docId__": 158,
    "kind": "test",
    "name": "describe38",
    "testId": 38,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe38",
    "access": "public",
    "description": "atan",
    "lineNumber": 150
  },
  {
    "__docId__": 159,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/index.js~describe0.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe38.it39",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 151
  },
  {
    "__docId__": 160,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "test/index.js~describe0.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe38.it40",
    "access": "public",
    "description": "should return the inverse tangent of the complex",
    "lineNumber": 154
  },
  {
    "__docId__": 161,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "test/index.js~describe0.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe38.it41",
    "access": "public",
    "description": "should return the inverse tangent complex of the given number",
    "lineNumber": 157
  },
  {
    "__docId__": 162,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "test/index.js~describe0.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe38.it42",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 160
  },
  {
    "__docId__": 163,
    "kind": "test",
    "name": "describe43",
    "testId": 43,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe43",
    "access": "public",
    "description": "atanh",
    "lineNumber": 167
  },
  {
    "__docId__": 164,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "test/index.js~describe0.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe43.it44",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 168
  },
  {
    "__docId__": 165,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "test/index.js~describe0.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe43.it45",
    "access": "public",
    "description": "should return the hyperbolic inverse tangent of the complex",
    "lineNumber": 171
  },
  {
    "__docId__": 166,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "test/index.js~describe0.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe43.it46",
    "access": "public",
    "description": "should return the hyperbolic inverse tangent complex of the given number",
    "lineNumber": 174
  },
  {
    "__docId__": 167,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "test/index.js~describe0.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe43.it47",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 177
  },
  {
    "__docId__": 168,
    "kind": "test",
    "name": "describe48",
    "testId": 48,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe48",
    "access": "public",
    "description": "ceil",
    "lineNumber": 184
  },
  {
    "__docId__": 169,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "test/index.js~describe0.describe48",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe48.it49",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 185
  },
  {
    "__docId__": 170,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "test/index.js~describe0.describe48",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe48.it50",
    "access": "public",
    "description": "should return the ceiling of the complex",
    "lineNumber": 188
  },
  {
    "__docId__": 171,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "test/index.js~describe0.describe48",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe48.it51",
    "access": "public",
    "description": "should return the ceiling complex of the given number",
    "lineNumber": 191
  },
  {
    "__docId__": 172,
    "kind": "test",
    "name": "it52",
    "testId": 52,
    "memberof": "test/index.js~describe0.describe48",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe48.it52",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 194
  },
  {
    "__docId__": 173,
    "kind": "test",
    "name": "describe53",
    "testId": 53,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe53",
    "access": "public",
    "description": "conjugate",
    "lineNumber": 201
  },
  {
    "__docId__": 174,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "test/index.js~describe0.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe53.it54",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 202
  },
  {
    "__docId__": 175,
    "kind": "test",
    "name": "it55",
    "testId": 55,
    "memberof": "test/index.js~describe0.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe53.it55",
    "access": "public",
    "description": "should negate the imaginary part of a complex",
    "lineNumber": 205
  },
  {
    "__docId__": 176,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "test/index.js~describe0.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe53.it56",
    "access": "public",
    "description": "should return an Array which real part is that of the value if the value is a number.",
    "lineNumber": 208
  },
  {
    "__docId__": 177,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "test/index.js~describe0.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe53.it57",
    "access": "public",
    "description": "should return a NaN complex if the given value is not a complex.",
    "lineNumber": 211
  },
  {
    "__docId__": 178,
    "kind": "test",
    "name": "describe58",
    "testId": 58,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe58",
    "access": "public",
    "description": "cos",
    "lineNumber": 218
  },
  {
    "__docId__": 179,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "test/index.js~describe0.describe58",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe58.it59",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 219
  },
  {
    "__docId__": 180,
    "kind": "test",
    "name": "it60",
    "testId": 60,
    "memberof": "test/index.js~describe0.describe58",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe58.it60",
    "access": "public",
    "description": "should return the cosine of the complex",
    "lineNumber": 222
  },
  {
    "__docId__": 181,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "test/index.js~describe0.describe58",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe58.it61",
    "access": "public",
    "description": "should return the cosine complex of the given number",
    "lineNumber": 225
  },
  {
    "__docId__": 182,
    "kind": "test",
    "name": "it62",
    "testId": 62,
    "memberof": "test/index.js~describe0.describe58",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe58.it62",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 228
  },
  {
    "__docId__": 183,
    "kind": "test",
    "name": "describe63",
    "testId": 63,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe63",
    "access": "public",
    "description": "cosh",
    "lineNumber": 235
  },
  {
    "__docId__": 184,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "test/index.js~describe0.describe63",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe63.it64",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 236
  },
  {
    "__docId__": 185,
    "kind": "test",
    "name": "it65",
    "testId": 65,
    "memberof": "test/index.js~describe0.describe63",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe63.it65",
    "access": "public",
    "description": "should return the hyperbolic cosine of the complex",
    "lineNumber": 239
  },
  {
    "__docId__": 186,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "test/index.js~describe0.describe63",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe63.it66",
    "access": "public",
    "description": "should return the hyperbolic cosine complex of the given number",
    "lineNumber": 242
  },
  {
    "__docId__": 187,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "test/index.js~describe0.describe63",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe63.it67",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 245
  },
  {
    "__docId__": 188,
    "kind": "test",
    "name": "describe68",
    "testId": 68,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe68",
    "access": "public",
    "description": "div",
    "lineNumber": 252
  },
  {
    "__docId__": 189,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "test/index.js~describe0.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe68.it69",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 253
  },
  {
    "__docId__": 190,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "test/index.js~describe0.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe68.it70",
    "access": "public",
    "description": "should return the quotient of two complex",
    "lineNumber": 256
  },
  {
    "__docId__": 191,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "test/index.js~describe0.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe68.it71",
    "access": "public",
    "description": "should return the quotient of a complex and a number",
    "lineNumber": 259
  },
  {
    "__docId__": 192,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "test/index.js~describe0.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe68.it72",
    "access": "public",
    "description": "should return the quotient of a number and a complex",
    "lineNumber": 262
  },
  {
    "__docId__": 193,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "test/index.js~describe0.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe68.it73",
    "access": "public",
    "description": "should return the quotient of a number and a number",
    "lineNumber": 265
  },
  {
    "__docId__": 194,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "test/index.js~describe0.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe68.it74",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 268
  },
  {
    "__docId__": 195,
    "kind": "test",
    "name": "describe75",
    "testId": 75,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe75",
    "access": "public",
    "description": "exp",
    "lineNumber": 275
  },
  {
    "__docId__": 196,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "test/index.js~describe0.describe75",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe75.it76",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 276
  },
  {
    "__docId__": 197,
    "kind": "test",
    "name": "it77",
    "testId": 77,
    "memberof": "test/index.js~describe0.describe75",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe75.it77",
    "access": "public",
    "description": "should return the exp of the complex",
    "lineNumber": 279
  },
  {
    "__docId__": 198,
    "kind": "test",
    "name": "it78",
    "testId": 78,
    "memberof": "test/index.js~describe0.describe75",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe75.it78",
    "access": "public",
    "description": "should return the ceiling complex of the given number",
    "lineNumber": 282
  },
  {
    "__docId__": 199,
    "kind": "test",
    "name": "it79",
    "testId": 79,
    "memberof": "test/index.js~describe0.describe75",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe75.it79",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 285
  },
  {
    "__docId__": 200,
    "kind": "test",
    "name": "describe80",
    "testId": 80,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe80",
    "access": "public",
    "description": "euler",
    "lineNumber": 292
  },
  {
    "__docId__": 201,
    "kind": "test",
    "name": "it81",
    "testId": 81,
    "memberof": "test/index.js~describe0.describe80",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe80.it81",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 293
  },
  {
    "__docId__": 202,
    "kind": "test",
    "name": "it82",
    "testId": 82,
    "memberof": "test/index.js~describe0.describe80",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe80.it82",
    "access": "public",
    "description": "should return the euler of the complex",
    "lineNumber": 296
  },
  {
    "__docId__": 203,
    "kind": "test",
    "name": "it83",
    "testId": 83,
    "memberof": "test/index.js~describe0.describe80",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe80.it83",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 299
  },
  {
    "__docId__": 204,
    "kind": "test",
    "name": "describe84",
    "testId": 84,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe84",
    "access": "public",
    "description": "floor",
    "lineNumber": 306
  },
  {
    "__docId__": 205,
    "kind": "test",
    "name": "it85",
    "testId": 85,
    "memberof": "test/index.js~describe0.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe84.it85",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 307
  },
  {
    "__docId__": 206,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "test/index.js~describe0.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe84.it86",
    "access": "public",
    "description": "should return the floor of the complex",
    "lineNumber": 310
  },
  {
    "__docId__": 207,
    "kind": "test",
    "name": "it87",
    "testId": 87,
    "memberof": "test/index.js~describe0.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe84.it87",
    "access": "public",
    "description": "should return the ceiling complex of the given number",
    "lineNumber": 313
  },
  {
    "__docId__": 208,
    "kind": "test",
    "name": "it88",
    "testId": 88,
    "memberof": "test/index.js~describe0.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe84.it88",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 316
  },
  {
    "__docId__": 209,
    "kind": "test",
    "name": "describe89",
    "testId": 89,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe89",
    "access": "public",
    "description": "ln",
    "lineNumber": 323
  },
  {
    "__docId__": 210,
    "kind": "test",
    "name": "it90",
    "testId": 90,
    "memberof": "test/index.js~describe0.describe89",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe89.it90",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 324
  },
  {
    "__docId__": 211,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "test/index.js~describe0.describe89",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe89.it91",
    "access": "public",
    "description": "should return the ln of the complex",
    "lineNumber": 327
  },
  {
    "__docId__": 212,
    "kind": "test",
    "name": "it92",
    "testId": 92,
    "memberof": "test/index.js~describe0.describe89",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe89.it92",
    "access": "public",
    "description": "should return the ceiling complex of the given number",
    "lineNumber": 330
  },
  {
    "__docId__": 213,
    "kind": "test",
    "name": "it93",
    "testId": 93,
    "memberof": "test/index.js~describe0.describe89",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe89.it93",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 333
  },
  {
    "__docId__": 214,
    "kind": "test",
    "name": "describe94",
    "testId": 94,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe94",
    "access": "public",
    "description": "log10",
    "lineNumber": 340
  },
  {
    "__docId__": 215,
    "kind": "test",
    "name": "it95",
    "testId": 95,
    "memberof": "test/index.js~describe0.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe94.it95",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 341
  },
  {
    "__docId__": 216,
    "kind": "test",
    "name": "it96",
    "testId": 96,
    "memberof": "test/index.js~describe0.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe94.it96",
    "access": "public",
    "description": "should return the log10 of the complex",
    "lineNumber": 344
  },
  {
    "__docId__": 217,
    "kind": "test",
    "name": "it97",
    "testId": 97,
    "memberof": "test/index.js~describe0.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe94.it97",
    "access": "public",
    "description": "should return the ceiling complex of the given number",
    "lineNumber": 347
  },
  {
    "__docId__": 218,
    "kind": "test",
    "name": "it98",
    "testId": 98,
    "memberof": "test/index.js~describe0.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe94.it98",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 350
  },
  {
    "__docId__": 219,
    "kind": "test",
    "name": "describe99",
    "testId": 99,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe99",
    "access": "public",
    "description": "mul",
    "lineNumber": 357
  },
  {
    "__docId__": 220,
    "kind": "test",
    "name": "it100",
    "testId": 100,
    "memberof": "test/index.js~describe0.describe99",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe99.it100",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 358
  },
  {
    "__docId__": 221,
    "kind": "test",
    "name": "it101",
    "testId": 101,
    "memberof": "test/index.js~describe0.describe99",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe99.it101",
    "access": "public",
    "description": "should return the product of two complex",
    "lineNumber": 361
  },
  {
    "__docId__": 222,
    "kind": "test",
    "name": "it102",
    "testId": 102,
    "memberof": "test/index.js~describe0.describe99",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe99.it102",
    "access": "public",
    "description": "should return the product of a complex and a number",
    "lineNumber": 364
  },
  {
    "__docId__": 223,
    "kind": "test",
    "name": "it103",
    "testId": 103,
    "memberof": "test/index.js~describe0.describe99",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe99.it103",
    "access": "public",
    "description": "should return the product of a number and a complex",
    "lineNumber": 367
  },
  {
    "__docId__": 224,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "test/index.js~describe0.describe99",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe99.it104",
    "access": "public",
    "description": "should return the product of a number and a number",
    "lineNumber": 370
  },
  {
    "__docId__": 225,
    "kind": "test",
    "name": "it105",
    "testId": 105,
    "memberof": "test/index.js~describe0.describe99",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe99.it105",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 373
  },
  {
    "__docId__": 226,
    "kind": "test",
    "name": "describe106",
    "testId": 106,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe106",
    "access": "public",
    "description": "negate",
    "lineNumber": 380
  },
  {
    "__docId__": 227,
    "kind": "test",
    "name": "it107",
    "testId": 107,
    "memberof": "test/index.js~describe0.describe106",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe106.it107",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 381
  },
  {
    "__docId__": 228,
    "kind": "test",
    "name": "it108",
    "testId": 108,
    "memberof": "test/index.js~describe0.describe106",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe106.it108",
    "access": "public",
    "description": "should negate the real and imaginary part of a complex",
    "lineNumber": 384
  },
  {
    "__docId__": 229,
    "kind": "test",
    "name": "it109",
    "testId": 109,
    "memberof": "test/index.js~describe0.describe106",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe106.it109",
    "access": "public",
    "description": "should return an Array which real part is that of the value if the negated value is a number.",
    "lineNumber": 387
  },
  {
    "__docId__": 230,
    "kind": "test",
    "name": "it110",
    "testId": 110,
    "memberof": "test/index.js~describe0.describe106",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe106.it110",
    "access": "public",
    "description": "should return a NaN complex if the given value is not a complex.",
    "lineNumber": 390
  },
  {
    "__docId__": 231,
    "kind": "test",
    "name": "describe111",
    "testId": 111,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe111",
    "access": "public",
    "description": "polar",
    "lineNumber": 397
  },
  {
    "__docId__": 232,
    "kind": "test",
    "name": "it112",
    "testId": 112,
    "memberof": "test/index.js~describe0.describe111",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe111.it112",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 398
  },
  {
    "__docId__": 233,
    "kind": "test",
    "name": "it113",
    "testId": 113,
    "memberof": "test/index.js~describe0.describe111",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe111.it113",
    "access": "public",
    "description": "should return the polar of the complex",
    "lineNumber": 401
  },
  {
    "__docId__": 234,
    "kind": "test",
    "name": "it114",
    "testId": 114,
    "memberof": "test/index.js~describe0.describe111",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe111.it114",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 404
  },
  {
    "__docId__": 235,
    "kind": "test",
    "name": "describe115",
    "testId": 115,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe115",
    "access": "public",
    "description": "pow",
    "lineNumber": 411
  },
  {
    "__docId__": 236,
    "kind": "test",
    "name": "it116",
    "testId": 116,
    "memberof": "test/index.js~describe0.describe115",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe115.it116",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 412
  },
  {
    "__docId__": 237,
    "kind": "test",
    "name": "it117",
    "testId": 117,
    "memberof": "test/index.js~describe0.describe115",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe115.it117",
    "access": "public",
    "description": "should return the power of two complex",
    "lineNumber": 415
  },
  {
    "__docId__": 238,
    "kind": "test",
    "name": "it118",
    "testId": 118,
    "memberof": "test/index.js~describe0.describe115",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe115.it118",
    "access": "public",
    "description": "should return the power of a complex and a number",
    "lineNumber": 418
  },
  {
    "__docId__": 239,
    "kind": "test",
    "name": "it119",
    "testId": 119,
    "memberof": "test/index.js~describe0.describe115",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe115.it119",
    "access": "public",
    "description": "should return the power of a number and a complex",
    "lineNumber": 421
  },
  {
    "__docId__": 240,
    "kind": "test",
    "name": "it120",
    "testId": 120,
    "memberof": "test/index.js~describe0.describe115",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe115.it120",
    "access": "public",
    "description": "should return the power of a number and a number",
    "lineNumber": 424
  },
  {
    "__docId__": 241,
    "kind": "test",
    "name": "it121",
    "testId": 121,
    "memberof": "test/index.js~describe0.describe115",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe115.it121",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 427
  },
  {
    "__docId__": 242,
    "kind": "test",
    "name": "describe122",
    "testId": 122,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe122",
    "access": "public",
    "description": "reciprocal",
    "lineNumber": 434
  },
  {
    "__docId__": 243,
    "kind": "test",
    "name": "it123",
    "testId": 123,
    "memberof": "test/index.js~describe0.describe122",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe122.it123",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 435
  },
  {
    "__docId__": 244,
    "kind": "test",
    "name": "it124",
    "testId": 124,
    "memberof": "test/index.js~describe0.describe122",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe122.it124",
    "access": "public",
    "description": "should return the reciprocal of the complex",
    "lineNumber": 438
  },
  {
    "__docId__": 245,
    "kind": "test",
    "name": "it125",
    "testId": 125,
    "memberof": "test/index.js~describe0.describe122",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe122.it125",
    "access": "public",
    "description": "should return the reciprocal complex of the given number",
    "lineNumber": 441
  },
  {
    "__docId__": 246,
    "kind": "test",
    "name": "it126",
    "testId": 126,
    "memberof": "test/index.js~describe0.describe122",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe122.it126",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 444
  },
  {
    "__docId__": 247,
    "kind": "test",
    "name": "describe127",
    "testId": 127,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe127",
    "access": "public",
    "description": "sign",
    "lineNumber": 451
  },
  {
    "__docId__": 248,
    "kind": "test",
    "name": "it128",
    "testId": 128,
    "memberof": "test/index.js~describe0.describe127",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe127.it128",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 452
  },
  {
    "__docId__": 249,
    "kind": "test",
    "name": "it129",
    "testId": 129,
    "memberof": "test/index.js~describe0.describe127",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe127.it129",
    "access": "public",
    "description": "should return the sine of the complex",
    "lineNumber": 455
  },
  {
    "__docId__": 250,
    "kind": "test",
    "name": "it130",
    "testId": 130,
    "memberof": "test/index.js~describe0.describe127",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe127.it130",
    "access": "public",
    "description": "should return the sine complex of the given number",
    "lineNumber": 458
  },
  {
    "__docId__": 251,
    "kind": "test",
    "name": "it131",
    "testId": 131,
    "memberof": "test/index.js~describe0.describe127",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe127.it131",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 461
  },
  {
    "__docId__": 252,
    "kind": "test",
    "name": "describe132",
    "testId": 132,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe132",
    "access": "public",
    "description": "sin",
    "lineNumber": 468
  },
  {
    "__docId__": 253,
    "kind": "test",
    "name": "it133",
    "testId": 133,
    "memberof": "test/index.js~describe0.describe132",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe132.it133",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 469
  },
  {
    "__docId__": 254,
    "kind": "test",
    "name": "it134",
    "testId": 134,
    "memberof": "test/index.js~describe0.describe132",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe132.it134",
    "access": "public",
    "description": "should return the sine of the complex",
    "lineNumber": 472
  },
  {
    "__docId__": 255,
    "kind": "test",
    "name": "it135",
    "testId": 135,
    "memberof": "test/index.js~describe0.describe132",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe132.it135",
    "access": "public",
    "description": "should return the sine complex of the given number",
    "lineNumber": 475
  },
  {
    "__docId__": 256,
    "kind": "test",
    "name": "it136",
    "testId": 136,
    "memberof": "test/index.js~describe0.describe132",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe132.it136",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 478
  },
  {
    "__docId__": 257,
    "kind": "test",
    "name": "describe137",
    "testId": 137,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe137",
    "access": "public",
    "description": "sinh",
    "lineNumber": 485
  },
  {
    "__docId__": 258,
    "kind": "test",
    "name": "it138",
    "testId": 138,
    "memberof": "test/index.js~describe0.describe137",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe137.it138",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 486
  },
  {
    "__docId__": 259,
    "kind": "test",
    "name": "it139",
    "testId": 139,
    "memberof": "test/index.js~describe0.describe137",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe137.it139",
    "access": "public",
    "description": "should return the hyperbolic sine of the complex",
    "lineNumber": 489
  },
  {
    "__docId__": 260,
    "kind": "test",
    "name": "it140",
    "testId": 140,
    "memberof": "test/index.js~describe0.describe137",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe137.it140",
    "access": "public",
    "description": "should return the hyperbolic sine complex of the given number",
    "lineNumber": 492
  },
  {
    "__docId__": 261,
    "kind": "test",
    "name": "it141",
    "testId": 141,
    "memberof": "test/index.js~describe0.describe137",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe137.it141",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 495
  },
  {
    "__docId__": 262,
    "kind": "test",
    "name": "describe142",
    "testId": 142,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe142",
    "access": "public",
    "description": "sqrt",
    "lineNumber": 502
  },
  {
    "__docId__": 263,
    "kind": "test",
    "name": "it143",
    "testId": 143,
    "memberof": "test/index.js~describe0.describe142",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe142.it143",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 503
  },
  {
    "__docId__": 264,
    "kind": "test",
    "name": "it144",
    "testId": 144,
    "memberof": "test/index.js~describe0.describe142",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe142.it144",
    "access": "public",
    "description": "should return the log10 of the complex",
    "lineNumber": 506
  },
  {
    "__docId__": 265,
    "kind": "test",
    "name": "it145",
    "testId": 145,
    "memberof": "test/index.js~describe0.describe142",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe142.it145",
    "access": "public",
    "description": "should return the square root complex of the given number",
    "lineNumber": 509
  },
  {
    "__docId__": 266,
    "kind": "test",
    "name": "it146",
    "testId": 146,
    "memberof": "test/index.js~describe0.describe142",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe142.it146",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 512
  },
  {
    "__docId__": 267,
    "kind": "test",
    "name": "describe147",
    "testId": 147,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe147",
    "access": "public",
    "description": "sub",
    "lineNumber": 519
  },
  {
    "__docId__": 268,
    "kind": "test",
    "name": "it148",
    "testId": 148,
    "memberof": "test/index.js~describe0.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe147.it148",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 520
  },
  {
    "__docId__": 269,
    "kind": "test",
    "name": "it149",
    "testId": 149,
    "memberof": "test/index.js~describe0.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe147.it149",
    "access": "public",
    "description": "should return the power of two complex",
    "lineNumber": 523
  },
  {
    "__docId__": 270,
    "kind": "test",
    "name": "it150",
    "testId": 150,
    "memberof": "test/index.js~describe0.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe147.it150",
    "access": "public",
    "description": "should return the power of a complex and a number",
    "lineNumber": 526
  },
  {
    "__docId__": 271,
    "kind": "test",
    "name": "it151",
    "testId": 151,
    "memberof": "test/index.js~describe0.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe147.it151",
    "access": "public",
    "description": "should return the power of a number and a complex",
    "lineNumber": 529
  },
  {
    "__docId__": 272,
    "kind": "test",
    "name": "it152",
    "testId": 152,
    "memberof": "test/index.js~describe0.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe147.it152",
    "access": "public",
    "description": "should return the power of a number and a number",
    "lineNumber": 532
  },
  {
    "__docId__": 273,
    "kind": "test",
    "name": "it153",
    "testId": 153,
    "memberof": "test/index.js~describe0.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe147.it153",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 535
  },
  {
    "__docId__": 274,
    "kind": "test",
    "name": "describe154",
    "testId": 154,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe154",
    "access": "public",
    "description": "tan",
    "lineNumber": 542
  },
  {
    "__docId__": 275,
    "kind": "test",
    "name": "it155",
    "testId": 155,
    "memberof": "test/index.js~describe0.describe154",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe154.it155",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 543
  },
  {
    "__docId__": 276,
    "kind": "test",
    "name": "it156",
    "testId": 156,
    "memberof": "test/index.js~describe0.describe154",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe154.it156",
    "access": "public",
    "description": "should return the tangent of the complex",
    "lineNumber": 546
  },
  {
    "__docId__": 277,
    "kind": "test",
    "name": "it157",
    "testId": 157,
    "memberof": "test/index.js~describe0.describe154",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe154.it157",
    "access": "public",
    "description": "should return the tangent complex of the given number",
    "lineNumber": 549
  },
  {
    "__docId__": 278,
    "kind": "test",
    "name": "it158",
    "testId": 158,
    "memberof": "test/index.js~describe0.describe154",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe154.it158",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 552
  },
  {
    "__docId__": 279,
    "kind": "test",
    "name": "describe159",
    "testId": 159,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe159",
    "access": "public",
    "description": "tanh",
    "lineNumber": 559
  },
  {
    "__docId__": 280,
    "kind": "test",
    "name": "it160",
    "testId": 160,
    "memberof": "test/index.js~describe0.describe159",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe159.it160",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 560
  },
  {
    "__docId__": 281,
    "kind": "test",
    "name": "it161",
    "testId": 161,
    "memberof": "test/index.js~describe0.describe159",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe159.it161",
    "access": "public",
    "description": "should return the hyperbolic tangent of the complex",
    "lineNumber": 563
  },
  {
    "__docId__": 282,
    "kind": "test",
    "name": "it162",
    "testId": 162,
    "memberof": "test/index.js~describe0.describe159",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe159.it162",
    "access": "public",
    "description": "should return the hyperbolic tangent complex of the given number",
    "lineNumber": 566
  },
  {
    "__docId__": 283,
    "kind": "test",
    "name": "it163",
    "testId": 163,
    "memberof": "test/index.js~describe0.describe159",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe159.it163",
    "access": "public",
    "description": "should return NaN Complex if the given value is not a complex.",
    "lineNumber": 569
  },
  {
    "__docId__": 284,
    "kind": "test",
    "name": "describe164",
    "testId": 164,
    "memberof": "test/index.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.js~describe0.describe164",
    "access": "public",
    "description": "zero",
    "lineNumber": 576
  },
  {
    "__docId__": 285,
    "kind": "test",
    "name": "it165",
    "testId": 165,
    "memberof": "test/index.js~describe0.describe164",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe164.it165",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 577
  },
  {
    "__docId__": 286,
    "kind": "test",
    "name": "it166",
    "testId": 166,
    "memberof": "test/index.js~describe0.describe164",
    "testDepth": 2,
    "static": true,
    "longname": "test/index.js~describe0.describe164.it166",
    "access": "public",
    "description": "should return a complex with 0 real and imaginary part.",
    "lineNumber": 580
  }
]