{"version":3,"sources":["webpack:///../docs/src/MultiProvider.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","MultiProvider","Provider","Consumer","providers","of","value","builder","x","isMDXComponent"],"mappings":"+cAQO,IAAMA,EAAe,Q,2KAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,gCAAe,0BAAYC,WAAW,KAAvB,cAAf,sEAA4I,0BAAYA,WAAW,KAAvB,mBAA5I,UACE,0BAAYA,WAAW,KAAvB,mBADF,8CAC4G,0BAAYA,WAAW,KAAvB,cAD5G,uGAGA,6BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gUAYL,iDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gVAcL,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uUAA0VC,QAAS,CACpYL,QACAH,kBACAS,eACAC,UACAC,kBACAC,aACAC,cACCT,QAAQ,cACb,YAAC,IAAD,CAAeU,UAAW,CAAC,YAAC,IAAD,CAAUC,GAAG,IAAIC,MAAM,MAAMZ,QAAQ,aAAe,YAAC,IAAD,CAAUW,GAAG,IAAIC,MAAM,MAAMZ,QAAQ,aAAe,YAAC,IAAD,CAAUW,GAAG,IAAIC,MAAM,MAAMZ,QAAQ,cAAgBA,QAAQ,iBAC9L,YAAC,IAAD,CAAUW,GAAG,IAAIE,QAAS,SAAAC,GAAC,OAAI,sBAAKA,IAASd,QAAQ,aACrD,YAAC,IAAD,CAAUW,GAAG,IAAIE,QAAS,SAAAC,GAAC,OAAI,sBAAKA,IAASd,QAAQ,aACrD,YAAC,IAAD,CAAUW,GAAG,IAAIE,QAAS,SAAAC,GAAC,OAAI,sBAAKA,IAASd,QAAQ,gB,kKAOzDH,EAAWkB,gBAAiB","file":"component---docs-src-multi-provider-mdx-8f1eeb2bd509e20d9083.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/Jason_Lyve/Documents/GitHub/react-provider/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MultiProvider, Provider, Consumer } from '../../src';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"multiprovider\"\n    }}>{`MultiProvider`}</h1>\n    <p>{`Nesting `}<inlineCode parentName=\"p\">{`<Provider>`}</inlineCode>{` elements can be cumbersome in the codebase, and could lead to the `}<inlineCode parentName=\"p\">{`pyramid of doom`}</inlineCode>{`.\nThe `}<inlineCode parentName=\"p\">{`<MultiProvider>`}</inlineCode>{` component seeks to solve this by allowing `}<inlineCode parentName=\"p\">{`<Provider>`}</inlineCode>{` composition while maintaining\nboth the same level of nesting as well as component tree structure.`}</p>\n    <p>{`This`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Provider of=\"A\" value=\"Foo\">\n  <Provider of=\"B\" value=\"Bar\">\n    <Provider of=\"C\" value=\"Baz\">\n      <Consumer of=\"A\" builder={x => <h1>{ x }</h1>} />\n      <Consumer of=\"B\" builder={x => <h2>{ x }</h2>} />\n      <Consumer of=\"C\" builder={x => <h3>{ x }</h3>} />\n    </Provider>\n  </Provider>\n</Provider>\n`}</code></pre>\n    <p>{`can be rewritten to this`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<MultiProvider\n  providers={[\n    <Provider of=\"A\" value=\"Foo\" />,\n    <Provider of=\"B\" value=\"Bar\" />,\n    <Provider of=\"C\" value=\"Baz\" />\n  ]}\n>\n  <Consumer of=\"A\" builder={x => <h1>{ x }</h1>} />\n  <Consumer of=\"B\" builder={x => <h2>{ x }</h2>} />\n  <Consumer of=\"C\" builder={x => <h3>{ x }</h3>} />\n</MultiProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<MultiProvider\\n  providers={[\\n    <Provider of=\\\"A\\\" value=\\\"Foo\\\" />,\\n    <Provider of=\\\"B\\\" value=\\\"Bar\\\" />,\\n    <Provider of=\\\"C\\\" value=\\\"Baz\\\" />,\\n  ]}\\n>\\n  <Consumer of=\\\"A\\\" builder={x => <h1>{x}</h1>} />\\n  <Consumer of=\\\"B\\\" builder={x => <h2>{x}</h2>} />\\n  <Consumer of=\\\"C\\\" builder={x => <h3>{x}</h3>} />\\n</MultiProvider>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MultiProvider,\n      Provider,\n      Consumer\n    }} mdxType=\"Playground\">\n  <MultiProvider providers={[<Provider of=\"A\" value=\"Foo\" mdxType=\"Provider\" />, <Provider of=\"B\" value=\"Bar\" mdxType=\"Provider\" />, <Provider of=\"C\" value=\"Baz\" mdxType=\"Provider\" />]} mdxType=\"MultiProvider\">\n    <Consumer of=\"A\" builder={x => <h1>{x}</h1>} mdxType=\"Consumer\" />\n    <Consumer of=\"B\" builder={x => <h2>{x}</h2>} mdxType=\"Consumer\" />\n    <Consumer of=\"C\" builder={x => <h3>{x}</h3>} mdxType=\"Consumer\" />\n  </MultiProvider>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}