{"version":3,"sources":["webpack:///../docs/src/Consumer2.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","MultiProvider","Provider","Consumer2","providers","of","value","builder","x","y","isMDXComponent"],"mappings":"+cAQO,IAAMA,EAAe,Q,uKAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,0BAAYC,WAAW,KAAvB,eAAH,4BAAuF,0BAAYA,WAAW,KAAvB,cAAvF,yDAAuM,0BAAYA,WAAW,KAAvB,aAAvM,gBACA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qQAA8QC,QAAS,CACxTL,QACAH,kBACAS,eACAC,UACAC,kBACAC,aACAC,eACCT,QAAQ,cACb,YAAC,IAAD,CAAeU,UAAW,CAAC,YAAC,IAAD,CAAUC,GAAG,IAAIC,MAAM,QAAQZ,QAAQ,aAAe,YAAC,IAAD,CAAUW,GAAG,IAAIC,MAAM,QAAQZ,QAAQ,cAAgBA,QAAQ,iBAC9I,YAAC,IAAD,CAAWW,GAAI,CAAC,IAAK,KAAME,QAAS,SAACC,EAAGC,GAAJ,OAAU,sBAAKD,EAAL,IAASC,IAASf,QAAQ,gBAGxE,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOW,GAAIF,IAAWT,QAAQ,W,8JAKlCH,EAAWmB,gBAAiB","file":"component---docs-src-consumer-2-mdx-25cba611663b69aa4a49.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/Jason_Lyve/Documents/GitHub/react-provider/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MultiProvider, Provider, Consumer2 } from '../../src';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"consumer2\"\n    }}>{`Consumer2`}</h1>\n    <p><inlineCode parentName=\"p\">{`<Consumer2>`}</inlineCode>{` component is similar to `}<inlineCode parentName=\"p\">{`<Consumer>`}</inlineCode>{` component but it can consume values from two nearest `}<inlineCode parentName=\"p\">{`<Provider`}</inlineCode>{`> ancestors.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={0} __code={'<MultiProvider\\n  providers={[\\n    <Provider of=\\\"A\\\" value=\\\"Hello\\\" />,\\n    <Provider of=\\\"B\\\" value=\\\"World\\\" />,\\n  ]}\\n>\\n  <Consumer2\\n    of={[\\'A\\', \\'B\\']}\\n    builder={(x, y) => (\\n      <h1>\\n        {x} {y}\\n      </h1>\\n    )}\\n  />\\n</MultiProvider>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MultiProvider,\n      Provider,\n      Consumer2\n    }} mdxType=\"Playground\">\n  <MultiProvider providers={[<Provider of=\"A\" value=\"Hello\" mdxType=\"Provider\" />, <Provider of=\"B\" value=\"World\" mdxType=\"Provider\" />]} mdxType=\"MultiProvider\">\n    <Consumer2 of={['A', 'B']} builder={(x, y) => <h1>{x} {y}</h1>} mdxType=\"Consumer2\" />\n  </MultiProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Consumer2} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}