[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/async-and.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply a logical conjunction.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst And = (a, b) => all([a, b]).then(v => v[0] && v[1]);\nexport default And;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-and.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "And",
    "memberof": "src/async-and.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-and.js~And",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-and.js",
    "importStyle": "And",
    "description": "Asynchronously apply a logical conjunction.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/async-eq.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply an equality comparison.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst EQ = (a, b) => all([a, b]).then(v => v[0] === v[1]);\nexport default EQ;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-eq.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "EQ",
    "memberof": "src/async-eq.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-eq.js~EQ",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-eq.js",
    "importStyle": "EQ",
    "description": "Asynchronously apply an equality comparison.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "src/async-for-each.js",
    "content": "\n/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { resolve } from './utils';\n/**\n * @ignore\n */\nconst defer = (item, scope) => resolve(item).then(x => resolve(scope(x)));\n\n/**\n * Applies asynchronous iteration for iterables\n */\nexport default class AsyncForEach {\n  /**\n   * Creates an AsyncForEach instance\n   * with the given iterable\n   * @param {Iterable} iterable\n   */\n  constructor(iterable) {\n    /**\n     * @ignore\n     */\n    this.iterable = iterable;\n  }\n\n  /**\n   * Initiate iteration of items from the iterable\n   * @param {Function} scope\n   * @returns {Promise}\n   */\n  do(scope) {\n    let prev;\n    // eslint-disable-next-line no-restricted-syntax\n    for (const item of this.iterable) {\n      if (typeof prev === 'undefined') {\n        prev = defer(item, scope);\n      } else {\n        prev = prev.then(() => defer(item, scope));\n      }\n    }\n    return resolve(prev);\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-for-each.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "defer",
    "memberof": "src/async-for-each.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-for-each.js~defer",
    "access": "public",
    "export": false,
    "importPath": "regrets-js/src/async-for-each.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 33,
    "ignore": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      },
      {
        "name": "scope",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "AsyncForEach",
    "memberof": "src/async-for-each.js",
    "static": true,
    "longname": "src/async-for-each.js~AsyncForEach",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-for-each.js",
    "importStyle": "AsyncForEach",
    "description": "Applies asynchronous iteration for iterables",
    "lineNumber": 38,
    "interface": false
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/async-for-each.js~AsyncForEach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-for-each.js~AsyncForEach#constructor",
    "access": "public",
    "description": "Creates an AsyncForEach instance\nwith the given iterable",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "iterable",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "iterable",
    "memberof": "src/async-for-each.js~AsyncForEach",
    "static": false,
    "longname": "src/async-for-each.js~AsyncForEach#iterable",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "do",
    "memberof": "src/async-for-each.js~AsyncForEach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-for-each.js~AsyncForEach#do",
    "access": "public",
    "description": "Initiate iteration of items from the iterable",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/async-ge.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply an greater-than-or-equal comparison.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst GE = (a, b) => all([a, b]).then(v => v[0] >= v[1]);\nexport default GE;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-ge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "GE",
    "memberof": "src/async-ge.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-ge.js~GE",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-ge.js",
    "importStyle": "GE",
    "description": "Asynchronously apply an greater-than-or-equal comparison.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/async-gt.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply an greater-than comparison.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst GT = (a, b) => all([a, b]).then(v => v[0] > v[1]);\nexport default GT;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-gt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "GT",
    "memberof": "src/async-gt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-gt.js~GT",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-gt.js",
    "importStyle": "GT",
    "description": "Asynchronously apply an greater-than comparison.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/async-if.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { resolve } from './utils';\n\n/**\n * Fundamental async decision-making control structure\n *\n * AsyncIf evaluates the given value, synchronous or asynchronous\n * and executes the \"then\" callback if the value is truthy, otherwise\n * executes the \"else\" or \"elseIf\" callbacks.\n *\n * Both the tested value and the callbacks can be asynchronous.\n */\nexport default class AsyncIf {\n  /**\n   * Creates an AsyncIf instance\n   *\n   * It is highly recommended that the given value\n   * be a Promise instance.\n   * @example\n   * const asyncIf = new AsyncIf(sleep(5000, true));\n   * @param {?Promise} promise\n   */\n  constructor(promise) {\n    /**\n     * The promise context of the AsyncIf instance\n     * @type {?Promise}\n     */\n    this.promise = resolve(promise);\n  }\n\n  /**\n   * Attaches a callback to an AsyncIf instance and executes\n   * the callback if the AsyncIf's resolved value is truthy.\n   * @example\n   * new AsyncIf(Promise.resolve(x % 2 == 0)).then(() => console.log(\"Value is even!\"));\n   * @param {?Function} scope\n   * @returns {AsyncIf}\n   */\n  then(scope) {\n    if (typeof scope === 'function') {\n      return new AsyncIf(\n        this.promise.then(x => (x ? resolve(scope()).then(() => x) : this.promise)),\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Attaches a callback to an AsyncIf instance and executes\n   * the callback if the AsyncIf's resolved value is falsey.\n   * @example\n   * new AsyncIf(Promise.resolve(x % 2 == 0)).else(() => console.log(\"Value is odd!\"));\n   * @param {?Function} scope\n   * @returns {AsyncIf}\n   */\n  else(scope) {\n    if (typeof scope === 'function') {\n      return new AsyncIf(\n        this.promise.then(x => (x ? this.promise : resolve(scope()).then(() => x))),\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Attaches an AsyncIf to an AsyncIf instance that evaluates\n   * if the AsyncIf's resolved value is falsey.\n   * @example\n   * new AsyncIf(Promise.resolve(x % 2 == 0))\n   *   .elseIf(x % 2 == 1)\n   *     .then() => console.log(\"Value is odd!\"));\n   * @param {?Function} promise\n   * @returns {AsyncIf}\n   */\n  elseIf(promise) {\n    return new AsyncIf(this.promise.then(x => (x ? false : promise)));\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-if.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "AsyncIf",
    "memberof": "src/async-if.js",
    "static": true,
    "longname": "src/async-if.js~AsyncIf",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-if.js",
    "importStyle": "AsyncIf",
    "description": "Fundamental async decision-making control structure\n\nAsyncIf evaluates the given value, synchronous or asynchronous\nand executes the \"then\" callback if the value is truthy, otherwise\nexecutes the \"else\" or \"elseIf\" callbacks.\n\nBoth the tested value and the callbacks can be asynchronous.",
    "lineNumber": 39,
    "interface": false
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/async-if.js~AsyncIf",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-if.js~AsyncIf#constructor",
    "access": "public",
    "description": "Creates an AsyncIf instance\n\nIt is highly recommended that the given value\nbe a Promise instance.",
    "examples": [
      "const asyncIf = new AsyncIf(sleep(5000, true));"
    ],
    "lineNumber": 49,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "promise",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "promise",
    "memberof": "src/async-if.js~AsyncIf",
    "static": false,
    "longname": "src/async-if.js~AsyncIf#promise",
    "access": "public",
    "description": "The promise context of the AsyncIf instance",
    "lineNumber": 54,
    "type": {
      "nullable": true,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "then",
    "memberof": "src/async-if.js~AsyncIf",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-if.js~AsyncIf#then",
    "access": "public",
    "description": "Attaches a callback to an AsyncIf instance and executes\nthe callback if the AsyncIf's resolved value is truthy.",
    "examples": [
      "new AsyncIf(Promise.resolve(x % 2 == 0)).then(() => console.log(\"Value is even!\"));"
    ],
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncIf}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIf"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "else",
    "memberof": "src/async-if.js~AsyncIf",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-if.js~AsyncIf#else",
    "access": "public",
    "description": "Attaches a callback to an AsyncIf instance and executes\nthe callback if the AsyncIf's resolved value is falsey.",
    "examples": [
      "new AsyncIf(Promise.resolve(x % 2 == 0)).else(() => console.log(\"Value is odd!\"));"
    ],
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncIf}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIf"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "elseIf",
    "memberof": "src/async-if.js~AsyncIf",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-if.js~AsyncIf#elseIf",
    "access": "public",
    "description": "Attaches an AsyncIf to an AsyncIf instance that evaluates\nif the AsyncIf's resolved value is falsey.",
    "examples": [
      "new AsyncIf(Promise.resolve(x % 2 == 0))\n  .elseIf(x % 2 == 1)\n    .then() => console.log(\"Value is odd!\"));"
    ],
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncIf}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "promise",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIf"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/async-le.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply an less-than-or-equal comparison.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst LE = (a, b) => all([a, b]).then(v => v[0] <= v[1]);\nexport default LE;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-le.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "LE",
    "memberof": "src/async-le.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-le.js~LE",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-le.js",
    "importStyle": "LE",
    "description": "Asynchronously apply an less-than-or-equal comparison.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/async-lt.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply an less-than comparison.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst LT = (a, b) => all([a, b]).then(v => v[0] < v[1]);\nexport default LT;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-lt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "LT",
    "memberof": "src/async-lt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-lt.js~LT",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-lt.js",
    "importStyle": "LT",
    "description": "Asynchronously apply an less-than comparison.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/async-ne.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply an inequality comparison.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst NE = (a, b) => all([a, b]).then(v => v[0] !== v[1]);\nexport default NE;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-ne.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "NE",
    "memberof": "src/async-ne.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-ne.js~NE",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-ne.js",
    "importStyle": "NE",
    "description": "Asynchronously apply an inequality comparison.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/async-not.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { resolve } from './utils';\n/**\n * Asynchronously apply an logical negation\n * @param {?Promise} x\n * @return {Promise}\n */\nconst Not = x => resolve(x).then(y => !y);\nexport default Not;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-not.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "Not",
    "memberof": "src/async-not.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-not.js~Not",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-not.js",
    "importStyle": "Not",
    "description": "Asynchronously apply an logical negation",
    "lineNumber": 34,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/async-or.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { all } from './utils';\n/**\n * Asynchronously apply a logical disjunction.\n * @param {?Promise} a\n * @param {?Promise} b\n * @return {Promise}\n */\nconst Or = (a, b) => all([a, b]).then(v => v[0] || v[1]);\nexport default Or;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-or.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "Or",
    "memberof": "src/async-or.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-or.js~Or",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-or.js",
    "importStyle": "Or",
    "description": "Asynchronously apply a logical disjunction.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/async-repeat.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { resolve } from './utils';\n\n/**\n * @ignore\n */\nconst Repeat = (evaluator, scope, isFunction) => resolve(scope()).then(\n  () => resolve(isFunction ? evaluator() : evaluator).then(\n    x => (x ? false : Repeat(evaluator, scope, isFunction)),\n  ),\n);\n\n/**\n * A repetitive control structure that executes first then checks\n * the evaluator. If the evaluator is false, the cycle repeats.\n */\nexport default class AsyncRepeat {\n  /**\n   * Creates an AsyncRepeat instance with a given function\n   * that serves as the scope.\n   * @param {Function} scope\n   */\n  constructor(scope) {\n    /**\n     * a function that serves as the scope for the AsyncRepeat.\n     * Executes every cycle.\n     * @type {Function}\n     */\n    this.scope = scope;\n  }\n\n  /**\n   * initiate the repeating cycle with the given evaluator\n   * @example\n   * new AsyncRepeat(() => x++).until(() => x === 3);\n   * @param {Function|Promise|any} evaluator\n   * @returns {Promise}\n   */\n  until(evaluator) {\n    return Repeat(evaluator, this.scope, typeof evaluator === 'function');\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-repeat.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "Repeat",
    "memberof": "src/async-repeat.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-repeat.js~Repeat",
    "access": "public",
    "export": false,
    "importPath": "regrets-js/src/async-repeat.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 33,
    "ignore": true,
    "params": [
      {
        "name": "evaluator",
        "types": [
          "*"
        ]
      },
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "isFunction",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "class",
    "name": "AsyncRepeat",
    "memberof": "src/async-repeat.js",
    "static": true,
    "longname": "src/async-repeat.js~AsyncRepeat",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-repeat.js",
    "importStyle": "AsyncRepeat",
    "description": "A repetitive control structure that executes first then checks\nthe evaluator. If the evaluator is false, the cycle repeats.",
    "lineNumber": 43,
    "interface": false
  },
  {
    "__docId__": 82,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/async-repeat.js~AsyncRepeat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-repeat.js~AsyncRepeat#constructor",
    "access": "public",
    "description": "Creates an AsyncRepeat instance with a given function\nthat serves as the scope.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "scope",
    "memberof": "src/async-repeat.js~AsyncRepeat",
    "static": false,
    "longname": "src/async-repeat.js~AsyncRepeat#scope",
    "access": "public",
    "description": "a function that serves as the scope for the AsyncRepeat.\nExecutes every cycle.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "until",
    "memberof": "src/async-repeat.js~AsyncRepeat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-repeat.js~AsyncRepeat#until",
    "access": "public",
    "description": "initiate the repeating cycle with the given evaluator",
    "examples": [
      "new AsyncRepeat(() => x++).until(() => x === 3);"
    ],
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "Promise",
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "evaluator",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/async-switch.js",
    "content": "\n/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { resolve, all } from './utils';\n/**\n * A switch statement is a type of selection control mechanism\n * used to allow the value of a variable or expression to change\n * the control flow of program execution via search and map.\n */\nexport default class AsyncSwitch {\n  /**\n   * Creates an AsyncSwitch instance given\n   * the subject to be selected with.\n   * @param {Function|Promise|any} subject\n   */\n  constructor(subject) {\n    /**\n     * @type {Function|Promise|any}\n     */\n    this.subject = subject;\n    /**\n     * @private\n     * @ignore\n     */\n    this.cases = [];\n  }\n\n  /**\n   * Register values to be selected from\n   * @param  {...any} matches\n   * @returns {AsyncSwitch}\n   */\n  case(...matches) {\n    /**\n     * @private\n     * @ignore\n     */\n    this.cases = [...this.cases, ...matches];\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  setParent(parent) {\n    /**\n     * @private\n     * @ignore\n     */\n    this.parent = parent;\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  parentBroken() {\n    if (this.parent instanceof AsyncSwitch) {\n      return this.parent.breakSuccess || this.parent.parentBroken();\n    }\n    return false;\n  }\n\n  /**\n   * @ignore\n   */\n  notBroken() {\n    if (this.breakSuccess || this.parentBroken()) {\n      return false;\n    }\n    if (this.broken) {\n      /**\n       * @private\n       * @ignore\n       */\n      this.breakSuccess = true;\n    }\n    return true;\n  }\n\n  /**\n   * Initiate a selection mechanism given the previous\n   * cases.\n   * @param {Function} scope\n   * @returns {AsyncSwitch}\n   */\n  do(scope) {\n    const { subject } = this;\n    const if1 = typeof subject === 'function';\n    const if2 = typeof scope === 'function';\n    return new AsyncSwitch(\n      all(this.cases).then(\n        v => resolve(if1 ? subject() : subject).then(\n          x => (v.includes(x) ? resolve(if2 ? this.notBroken() && resolve(scope()).then(\n            () => x,\n          ) : scope) : x),\n        ),\n      ),\n    ).setParent(this);\n  }\n\n  /**\n   * Create a break signal that tells the next cases to\n   * not execute if the previous case is successful.\n   *\n   * @returns {AsyncSwitch}\n   */\n  break() {\n    if (this.parent instanceof AsyncSwitch) {\n      this.parent.broken = true;\n    }\n    return this;\n  }\n\n  /**\n   * Attaches a callback that is executed with or without\n   * any cases\n   * @param {Function} scope\n   * @returns {Promise}\n   */\n  default(scope) {\n    const { subject } = this;\n    const if1 = typeof subject === 'function';\n    const if2 = typeof scope === 'function';\n    return resolve(if1 ? subject() : subject).then(\n      () => (if2 ? !this.parentBroken() && scope() : scope),\n    );\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-switch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "class",
    "name": "AsyncSwitch",
    "memberof": "src/async-switch.js",
    "static": true,
    "longname": "src/async-switch.js~AsyncSwitch",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-switch.js",
    "importStyle": "AsyncSwitch",
    "description": "A switch statement is a type of selection control mechanism\nused to allow the value of a variable or expression to change\nthe control flow of program execution via search and map.",
    "lineNumber": 35,
    "interface": false
  },
  {
    "__docId__": 87,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#constructor",
    "access": "public",
    "description": "Creates an AsyncSwitch instance given\nthe subject to be selected with.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "Promise",
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "subject",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "subject",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#subject",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Function",
        "Promise",
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "cases",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#cases",
    "access": "private",
    "description": "",
    "lineNumber": 50,
    "ignore": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "case",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#case",
    "access": "public",
    "description": "Register values to be selected from",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncSwitch}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "matches",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncSwitch"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "setParent",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#setParent",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "ignore": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "parent",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#parent",
    "access": "private",
    "description": "",
    "lineNumber": 75,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "parentBroken",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#parentBroken",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "notBroken",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#notBroken",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "breakSuccess",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#breakSuccess",
    "access": "private",
    "description": "",
    "lineNumber": 101,
    "ignore": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "do",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#do",
    "access": "public",
    "description": "Initiate a selection mechanism given the previous\ncases.",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncSwitch}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncSwitch"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "break",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#break",
    "access": "public",
    "description": "Create a break signal that tells the next cases to\nnot execute if the previous case is successful.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncSwitch}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncSwitch"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "default",
    "memberof": "src/async-switch.js~AsyncSwitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-switch.js~AsyncSwitch#default",
    "access": "public",
    "description": "Attaches a callback that is executed with or without\nany cases",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/async-while.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport { resolve } from './utils';\n\n/**\n * @ignore\n */\nconst While = (evaluator, scope, isFunction) => resolve(isFunction ? evaluator() : evaluator).then(\n  x => (x ? resolve(scope()).then(\n    () => While(evaluator, scope, isFunction),\n  ) : false),\n);\n\n/**\n * A repetitive control structure that both evaluates the condition\n * and executes it scope asynchrously.\n * @example\n * new AsyncWhile(sleep(5000, true)).do(() => console.log(\"5000ms passed\"));\n *\n */\nexport default class AsyncWhile {\n  /**\n   * Creates an AsyncWhile instance\n   * @param {Function|Promise|any} evaluator a Promise or a function that is evaluated every cycle.\n   */\n  constructor(evaluator) {\n    /**\n     * a Promise or a function that is evaluated every cycle.\n     * @type {Function|Promise|any}\n     */\n    this.evaluator = evaluator;\n  }\n\n  /**\n   * Attaches a callback to the AsyncWhile that is executed while the evaluator resolves to true.\n   * @param {Function} scope\n   * @example\n   * new AsyncWhile(() => x < 3).do(() => x++);\n   * @returns {Promise}\n   */\n  do(scope) {\n    return While(this.evaluator, scope, typeof this.evaluator === 'function');\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/async-while.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "While",
    "memberof": "src/async-while.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/async-while.js~While",
    "access": "public",
    "export": false,
    "importPath": "regrets-js/src/async-while.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 33,
    "ignore": true,
    "params": [
      {
        "name": "evaluator",
        "types": [
          "*"
        ]
      },
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "isFunction",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "class",
    "name": "AsyncWhile",
    "memberof": "src/async-while.js",
    "static": true,
    "longname": "src/async-while.js~AsyncWhile",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/async-while.js",
    "importStyle": "AsyncWhile",
    "description": "A repetitive control structure that both evaluates the condition\nand executes it scope asynchrously.",
    "examples": [
      "new AsyncWhile(sleep(5000, true)).do(() => console.log(\"5000ms passed\"));"
    ],
    "lineNumber": 46,
    "interface": false
  },
  {
    "__docId__": 103,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/async-while.js~AsyncWhile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-while.js~AsyncWhile#constructor",
    "access": "public",
    "description": "Creates an AsyncWhile instance",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "Promise",
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "evaluator",
        "description": "a Promise or a function that is evaluated every cycle."
      }
    ]
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "evaluator",
    "memberof": "src/async-while.js~AsyncWhile",
    "static": false,
    "longname": "src/async-while.js~AsyncWhile#evaluator",
    "access": "public",
    "description": "a Promise or a function that is evaluated every cycle.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "Function",
        "Promise",
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "do",
    "memberof": "src/async-while.js~AsyncWhile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/async-while.js~AsyncWhile#do",
    "access": "public",
    "description": "Attaches a callback to the AsyncWhile that is executed while the evaluator resolves to true.",
    "examples": [
      "new AsyncWhile(() => x < 3).do(() => x++);"
    ],
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\n\n\nexport { default as if } from './async-if';\nexport { default as switch } from './async-switch';\nexport { default as while } from './async-while';\nexport { default as repeat } from './async-repeat';\nexport { default as forEach } from './async-for-each';\n\nexport { default as not } from './async-not';\nexport { default as and } from './async-and';\nexport { default as or } from './async-or';\n\nexport { default as eq } from './async-eq';\nexport { default as ne } from './async-ne';\n\nexport { default as gt } from './async-gt';\nexport { default as ge } from './async-ge';\nexport { default as le } from './async-le';\nexport { default as lt } from './async-lt';\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/utils.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\n/**\n * @ignore\n */\nexport const resolve = Promise.resolve.bind(Promise);\n/**\n * @ignore\n */\nexport const all = Promise.all.bind(Promise);\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/src/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "resolve",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~resolve",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/utils.js",
    "importStyle": "{resolve}",
    "description": "",
    "lineNumber": 31,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "all",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~all",
    "access": "public",
    "export": true,
    "importPath": "regrets-js/src/utils.js",
    "importStyle": "{all}",
    "description": "",
    "lineNumber": 35,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# regrets.js\n\n⏰ Asynchronous control structures in JS\n\n[![NPM](https://nodei.co/npm/regrets-js.png)](https://nodei.co/npm/regrets-js/)\n\n[![HitCount](http://hits.dwyl.io/lxsmnsyc/regrets.js.svg)](http://hits.dwyl.io/lxsmnsyc/regrets.js)\n[![](https://data.jsdelivr.com/v1/package/npm/regrets-js/badge)](https://www.jsdelivr.com/package/npm/regrets-js)\n\n| Platform | Build Status |\n| --- | --- |\n| Linux | [![Build Status](https://travis-ci.org/LXSMNSYC/regrets.js.svg?branch=master)](https://travis-ci.org/LXSMNSYC/regrets.js) |\n| Windows | [![Build status](https://ci.appveyor.com/api/projects/status/mtsm13ua0ok6dw5j?svg=true)](https://ci.appveyor.com/project/LXSMNSYC/regrets-js) |\n\n[![codecov](https://codecov.io/gh/LXSMNSYC/regrets.js/branch/master/graph/badge.svg)](https://codecov.io/gh/LXSMNSYC/regrets.js)\n\n[![Known Vulnerabilities](https://snyk.io/test/github/LXSMNSYC/regrets.js/badge.svg?targetFile=package.json)](https://snyk.io/test/github/LXSMNSYC/regrets.js?targetFile=package.json)\n\n## What is regrets.js\n\nregrets.js or Regrets allows asynchronous control structures in JS.\n\nRegrets provides asynchronous:\n\n* if-elseif-else\n* while-do\n* repeat-until\n* boolean expressions (and, or, not)\n* comparisons (eq, ne, gt, lt, ge, le)\n* switch-case-default\n* foreach\n\nYou can read more here at the [documentation site](https://lxsmnsyc.github.io/regrets.js/).\n  \n## Usage\n\n### Installation\n\nNPM\n\n```bash\nnpm i regrets-js\n```\n\nCDN\n\n```html\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/regrets-js/dist/index.min.js\"></script>\n```\n\n### Loading the module\n\nCommonJS\n\n```js\nconst regrets = require('regrets-js');\n```\n\n### Example\n\n#### Delayed odd or even\n\nChecks asynchronously if the number is an odd or an even number.\n\nThe result is resolved after 5 seconds.\n\n```js\nconst sleep = (x, y) => new Promise(z => setTimeout(z, y, x));\n\nconst checkParity = x => new regrets.if(sleep(x % 2 === 0, 5000))\n  .then(() => console.log('The number is even'))\n  .else(() => console.log('The number is odd'))\n```\n\n## Build\n\nClone the repo first then run in Terminal:\n\n```bash\nnpm install\n```\n\nThis installs the dependencies, then run:\n\n```bash\nnpm run build\n```\n\nto build the CommonJS module, the browser module, the minified module, the docs, the coverages and the test suite.",
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"regrets-js\",\n  \"version\": \"0.1.0\",\n  \"description\": \"⏰ Asynchronous control structures in JS\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"linux-mocha\": \"./node_modules/.bin/mocha --require @babel/register -R spec --recursive\",\n    \"linux-test\": \"./node_modules/.bin/nyc --reporter=html npm run linux-mocha\",\n    \"linux-docs\": \"./node_modules/.bin/esdoc\",\n    \"linux-cjs\": \"./node_modules/.bin/rollup src/index.js --format cjs --name \\\"regrets\\\" --file index.js\",\n    \"linux-browser\": \"./node_modules/.bin/rollup src/index.js --format iife --name \\\"regrets\\\" --file dist/index.js\",\n    \"linux-minify\": \"npm run linux-browser && ./node_modules/.bin/terser dist/index.js --compress --mangle --output dist/index.min.js\",\n    \"linux-build\": \"npm run linux-cjs && npm run linux-minify && npm run linux-docs && npm run linux-test\",\n\n    \"win-mocha\": \"node node_modules/mocha/bin/mocha --require @babel/register -R spec --recursive\",\n    \"win-test\": \"node node_modules/nyc/bin/nyc.js --reporter=html npm run win-mocha\",\n    \"win-docs\": \"node node_modules/esdoc/out/src/ESDocCLI.js\",\n    \"win-cjs\": \"node node_modules/.bin/rollup src/index.js --format cjs --name \\\"regrets\\\" --file index.js\",\n    \"win-browser\": \"node node_modules/.bin/rollup src/index.js --format iife --name \\\"regrets\\\" --file dist/index.js\",\n    \"win-minify\": \"npm run win-browser && node node_modules/.bin/terser dist/index.js --compress --mangle --output dist/index.min.js\",\n    \"win-build\": \"npm run win-cjs && npm run win-minify && npm run win-docs && npm run win-test\",\n    \n    \"mocha\": \"npm run linux-mocha || npm run win-mocha\",\n    \"test\": \"npm run linux-test || npm run win-test\",\n    \"docs\": \"npm run linux-docs || npm run win-docs\",\n    \"cjs\": \"npm run linux-cjs || npm run win-cjs\",\n    \"browser\": \"npm run linux-browser || npm run win-browser\",\n    \"minify\": \"npm run linux-minify || npm run win-minify\",\n    \"build\": \"npm run cjs && npm run minify && npm run docs && npm test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/LXSMNSYC/regrets.js.git\"\n  },\n  \"keywords\": [\n    \"async\",\n    \"promise\"\n  ],\n  \"author\": \"LXSMNSYC (alexis.munsayac@gmail.com)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/LXSMNSYC/regrets.js/issues\"\n  },\n  \"homepage\": \"https://github.com/LXSMNSYC/regrets.js#readme\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.3.4\",\n    \"@babel/preset-env\": \"^7.3.4\",\n    \"@babel/register\": \"^7.0.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-integrate-test-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.15.1\",\n    \"eslint-config-airbnb-base\": \"^13.1.0\",\n    \"eslint-plugin-import\": \"^2.16.0\",\n    \"mocha\": \"^6.0.2\",\n    \"nyc\": \"^13.3.0\",\n    \"rollup\": \"^1.6.0\",\n    \"terser\": \"^3.17.0\"\n  }\n}\n",
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 110,
    "kind": "testFile",
    "name": "test/async-and.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport And from '../src/async-and';\n\n/**\n *\n */\ndescribe('And', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(And(true, true) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if both resolved values are truthy', (done) => {\n    And(true, true).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if one of the values are falsey', (done) => {\n    And(true, false).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-and.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/async-and.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-and.js~describe0",
    "access": "public",
    "description": "And",
    "lineNumber": 8
  },
  {
    "__docId__": 112,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "test/async-and.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-and.js~describe0.it1",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 113,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/async-and.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-and.js~describe0.it2",
    "access": "public",
    "description": "should resolve to true if both resolved values are truthy",
    "lineNumber": 18
  },
  {
    "__docId__": 114,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/async-and.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-and.js~describe0.it3",
    "access": "public",
    "description": "should resolve to false if one of the values are falsey",
    "lineNumber": 24
  },
  {
    "__docId__": 115,
    "kind": "testFile",
    "name": "test/async-eq.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport EQ from '../src/async-eq';\n\n/**\n *\n */\ndescribe('EQ', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(EQ(true, true) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if both values are equal', (done) => {\n    EQ(true, true).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if both values are not equal', (done) => {\n    EQ(false, true).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-eq.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "test",
    "name": "describe4",
    "testId": 4,
    "memberof": "test/async-eq.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-eq.js~describe4",
    "access": "public",
    "description": "EQ",
    "lineNumber": 8
  },
  {
    "__docId__": 117,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/async-eq.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-eq.js~describe4.it5",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 118,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "test/async-eq.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-eq.js~describe4.it6",
    "access": "public",
    "description": "should resolve to true if both values are equal",
    "lineNumber": 18
  },
  {
    "__docId__": 119,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/async-eq.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-eq.js~describe4.it7",
    "access": "public",
    "description": "should resolve to false if both values are not equal",
    "lineNumber": 24
  },
  {
    "__docId__": 120,
    "kind": "testFile",
    "name": "test/async-for-each.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport AsyncForEach from '../src/async-for-each';\n\ndescribe('AsyncForEach', () => {\n  describe('#do', () => {\n    it('should return a Promise', () => {\n      assert(new AsyncForEach([]).do(() => {}) instanceof Promise);\n    });\n    it('should iterate all items in the iterable', (done) => {\n      const items = [1, 2, 3, 4, 5];\n      let itemCount = 5;\n      let booleanAcc = true;\n      new AsyncForEach(items).do((item) => {\n        booleanAcc = booleanAcc && items.includes(item);\n        itemCount += 1;\n      }).then(\n        () => (booleanAcc && itemCount === 0 ? done() : done(false)),\n      );\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-for-each.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/async-for-each.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-for-each.js~describe8",
    "access": "public",
    "description": "AsyncForEach",
    "lineNumber": 5
  },
  {
    "__docId__": 122,
    "kind": "test",
    "name": "describe9",
    "testId": 9,
    "memberof": "test/async-for-each.js~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-for-each.js~describe8.describe9",
    "access": "public",
    "description": "#do",
    "lineNumber": 6
  },
  {
    "__docId__": 123,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "test/async-for-each.js~describe8.describe9",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-for-each.js~describe8.describe9.it10",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 7
  },
  {
    "__docId__": 124,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/async-for-each.js~describe8.describe9",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-for-each.js~describe8.describe9.it11",
    "access": "public",
    "description": "should iterate all items in the iterable",
    "lineNumber": 10
  },
  {
    "__docId__": 125,
    "kind": "testFile",
    "name": "test/async-ge.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport GE from '../src/async-ge';\n\n/**\n *\n */\ndescribe('GE', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(GE(1, 2) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if a value is greater than the other value', (done) => {\n    GE(3, 2).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to true if a value is equal to the other value', (done) => {\n    GE(2, 2).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if a value is less than the other value', (done) => {\n    GE(1, 2).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-ge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "test",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/async-ge.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-ge.js~describe12",
    "access": "public",
    "description": "GE",
    "lineNumber": 8
  },
  {
    "__docId__": 127,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "test/async-ge.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-ge.js~describe12.it13",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 128,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/async-ge.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-ge.js~describe12.it14",
    "access": "public",
    "description": "should resolve to true if a value is greater than the other value",
    "lineNumber": 18
  },
  {
    "__docId__": 129,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/async-ge.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-ge.js~describe12.it15",
    "access": "public",
    "description": "should resolve to true if a value is equal to the other value",
    "lineNumber": 24
  },
  {
    "__docId__": 130,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/async-ge.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-ge.js~describe12.it16",
    "access": "public",
    "description": "should resolve to false if a value is less than the other value",
    "lineNumber": 30
  },
  {
    "__docId__": 131,
    "kind": "testFile",
    "name": "test/async-gt.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport GT from '../src/async-gt';\n\n/**\n *\n */\ndescribe('GT', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(GT(1, 2) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if a value is greater than the other value', (done) => {\n    GT(3, 2).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if a value is equal to the other value', (done) => {\n    GT(2, 2).then(x => (x ? done(false) : done()));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if a value is less than the other value', (done) => {\n    GT(1, 2).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-gt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "test/async-gt.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-gt.js~describe17",
    "access": "public",
    "description": "GT",
    "lineNumber": 8
  },
  {
    "__docId__": 133,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/async-gt.js~describe17",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-gt.js~describe17.it18",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 134,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "test/async-gt.js~describe17",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-gt.js~describe17.it19",
    "access": "public",
    "description": "should resolve to true if a value is greater than the other value",
    "lineNumber": 18
  },
  {
    "__docId__": 135,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/async-gt.js~describe17",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-gt.js~describe17.it20",
    "access": "public",
    "description": "should resolve to false if a value is equal to the other value",
    "lineNumber": 24
  },
  {
    "__docId__": 136,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "test/async-gt.js~describe17",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-gt.js~describe17.it21",
    "access": "public",
    "description": "should resolve to false if a value is less than the other value",
    "lineNumber": 30
  },
  {
    "__docId__": 137,
    "kind": "testFile",
    "name": "test/async-if.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\n\nimport AsyncIf from '../src/async-if';\n\n/**\n *\n */\ndescribe('AsyncIf', () => {\n  /**\n   *\n   */\n  describe('#then', () => {\n    /**\n     *\n     */\n    it('should return an AsyncIf instance', () => {\n      assert(new AsyncIf(true).then(() => {}) instanceof AsyncIf);\n    });\n    /**\n     *\n     */\n    it('should execute if the resolved promise is truthy', (done) => {\n      const asyncIf = new AsyncIf(true);\n\n      asyncIf.then(() => done());\n    });\n    /**\n     *\n     */\n    it('should not execute if the resolved promise is falsey', (done) => {\n      const asyncIf = new AsyncIf(false);\n\n      asyncIf.then(() => done(false));\n\n      setTimeout(done, 100);\n    });\n    /**\n     *\n     */\n    it('should return the same instance if the passed value is not a function', () => {\n      const asyncIf = new AsyncIf(false);\n\n      assert(asyncIf.then() === asyncIf);\n      assert(asyncIf.then(100) === asyncIf);\n      assert(asyncIf.then('Hello') === asyncIf);\n      assert(asyncIf.then(true) === asyncIf);\n      assert(asyncIf.then({}) === asyncIf);\n      assert(asyncIf.then([]) === asyncIf);\n    });\n  });\n  /**\n   *\n   */\n  describe('#else', () => {\n    /**\n     *\n     */\n    it('should return an AsyncIf instance', () => {\n      assert(new AsyncIf(true).else(() => {}) instanceof AsyncIf);\n    });\n    /**\n     *\n     */\n    it('should execute if the resolved promise is falsey', (done) => {\n      const asyncIf = new AsyncIf(false);\n\n      asyncIf.else(() => done());\n    });\n    /**\n     *\n     */\n    it('should not execute if the resolved promise is truthy', (done) => {\n      const asyncIf = new AsyncIf(true);\n\n      asyncIf.else(() => done(false));\n\n      setTimeout(done, 100);\n    });\n    /**\n     *\n     */\n    it('should return the same instance if the passed value is not a function', () => {\n      const asyncIf = new AsyncIf(false);\n\n      assert(asyncIf.else() === asyncIf);\n      assert(asyncIf.else(100) === asyncIf);\n      assert(asyncIf.else('Hello') === asyncIf);\n      assert(asyncIf.else(true) === asyncIf);\n      assert(asyncIf.else({}) === asyncIf);\n      assert(asyncIf.else([]) === asyncIf);\n    });\n  });\n  /**\n   *\n   */\n  describe('#elseIf', () => {\n    /**\n     *\n     */\n    it('should return an AsyncIf instance', () => {\n      assert(new AsyncIf(true).elseIf(true) instanceof AsyncIf);\n    });\n    /**\n     *\n     */\n    it('should execute if the resolved promise is falsey', (done) => {\n      const x = 2;\n\n      new AsyncIf(x === 1).then(() => done(false))\n        .elseIf(x === 2).then(() => done());\n    });\n    /**\n     *\n     */\n    it('should not execute if the resolved promise is truthy', (done) => {\n      const x = 1;\n\n      new AsyncIf(x === 1).then(() => done())\n        .elseIf(x === 2).then(() => done(false));\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-if.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "test",
    "name": "describe22",
    "testId": 22,
    "memberof": "test/async-if.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-if.js~describe22",
    "access": "public",
    "description": "AsyncIf",
    "lineNumber": 9
  },
  {
    "__docId__": 139,
    "kind": "test",
    "name": "describe23",
    "testId": 23,
    "memberof": "test/async-if.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-if.js~describe22.describe23",
    "access": "public",
    "description": "#then",
    "lineNumber": 13
  },
  {
    "__docId__": 140,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "test/async-if.js~describe22.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe23.it24",
    "access": "public",
    "description": "should return an AsyncIf instance",
    "lineNumber": 17
  },
  {
    "__docId__": 141,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/async-if.js~describe22.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe23.it25",
    "access": "public",
    "description": "should execute if the resolved promise is truthy",
    "lineNumber": 23
  },
  {
    "__docId__": 142,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/async-if.js~describe22.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe23.it26",
    "access": "public",
    "description": "should not execute if the resolved promise is falsey",
    "lineNumber": 31
  },
  {
    "__docId__": 143,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "test/async-if.js~describe22.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe23.it27",
    "access": "public",
    "description": "should return the same instance if the passed value is not a function",
    "lineNumber": 41
  },
  {
    "__docId__": 144,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/async-if.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-if.js~describe22.describe28",
    "access": "public",
    "description": "#else",
    "lineNumber": 55
  },
  {
    "__docId__": 145,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/async-if.js~describe22.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe28.it29",
    "access": "public",
    "description": "should return an AsyncIf instance",
    "lineNumber": 59
  },
  {
    "__docId__": 146,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/async-if.js~describe22.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe28.it30",
    "access": "public",
    "description": "should execute if the resolved promise is falsey",
    "lineNumber": 65
  },
  {
    "__docId__": 147,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "test/async-if.js~describe22.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe28.it31",
    "access": "public",
    "description": "should not execute if the resolved promise is truthy",
    "lineNumber": 73
  },
  {
    "__docId__": 148,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "test/async-if.js~describe22.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe28.it32",
    "access": "public",
    "description": "should return the same instance if the passed value is not a function",
    "lineNumber": 83
  },
  {
    "__docId__": 149,
    "kind": "test",
    "name": "describe33",
    "testId": 33,
    "memberof": "test/async-if.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-if.js~describe22.describe33",
    "access": "public",
    "description": "#elseIf",
    "lineNumber": 97
  },
  {
    "__docId__": 150,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "test/async-if.js~describe22.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe33.it34",
    "access": "public",
    "description": "should return an AsyncIf instance",
    "lineNumber": 101
  },
  {
    "__docId__": 151,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "test/async-if.js~describe22.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe33.it35",
    "access": "public",
    "description": "should execute if the resolved promise is falsey",
    "lineNumber": 107
  },
  {
    "__docId__": 152,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "test/async-if.js~describe22.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-if.js~describe22.describe33.it36",
    "access": "public",
    "description": "should not execute if the resolved promise is truthy",
    "lineNumber": 116
  },
  {
    "__docId__": 153,
    "kind": "testFile",
    "name": "test/async-le.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport LE from '../src/async-le';\n\n/**\n *\n */\ndescribe('LE', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(LE(1, 2) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if a value is less than the other value', (done) => {\n    LE(1, 2).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to true if a value is equal to the other value', (done) => {\n    LE(2, 2).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if a value is greater than the other value', (done) => {\n    LE(3, 2).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-le.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "test",
    "name": "describe37",
    "testId": 37,
    "memberof": "test/async-le.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-le.js~describe37",
    "access": "public",
    "description": "LE",
    "lineNumber": 8
  },
  {
    "__docId__": 155,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "test/async-le.js~describe37",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-le.js~describe37.it38",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 156,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/async-le.js~describe37",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-le.js~describe37.it39",
    "access": "public",
    "description": "should resolve to true if a value is less than the other value",
    "lineNumber": 18
  },
  {
    "__docId__": 157,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "test/async-le.js~describe37",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-le.js~describe37.it40",
    "access": "public",
    "description": "should resolve to true if a value is equal to the other value",
    "lineNumber": 24
  },
  {
    "__docId__": 158,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "test/async-le.js~describe37",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-le.js~describe37.it41",
    "access": "public",
    "description": "should resolve to false if a value is greater than the other value",
    "lineNumber": 30
  },
  {
    "__docId__": 159,
    "kind": "testFile",
    "name": "test/async-lt.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport LT from '../src/async-lt';\n\n/**\n *\n */\ndescribe('LT', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(LT(1, 2) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if a value is less than the other value', (done) => {\n    LT(1, 2).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if a value is equal to the other value', (done) => {\n    LT(2, 2).then(x => (x ? done(false) : done()));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if a value is greater than the other value', (done) => {\n    LT(3, 2).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-lt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "test",
    "name": "describe42",
    "testId": 42,
    "memberof": "test/async-lt.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-lt.js~describe42",
    "access": "public",
    "description": "LT",
    "lineNumber": 8
  },
  {
    "__docId__": 161,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "test/async-lt.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-lt.js~describe42.it43",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 162,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "test/async-lt.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-lt.js~describe42.it44",
    "access": "public",
    "description": "should resolve to true if a value is less than the other value",
    "lineNumber": 18
  },
  {
    "__docId__": 163,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "test/async-lt.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-lt.js~describe42.it45",
    "access": "public",
    "description": "should resolve to false if a value is equal to the other value",
    "lineNumber": 24
  },
  {
    "__docId__": 164,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "test/async-lt.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-lt.js~describe42.it46",
    "access": "public",
    "description": "should resolve to false if a value is greater than the other value",
    "lineNumber": 30
  },
  {
    "__docId__": 165,
    "kind": "testFile",
    "name": "test/async-ne.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport NE from '../src/async-ne';\n\n/**\n *\n */\ndescribe('NE', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(NE(true, true) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if both values are not equal', (done) => {\n    NE(true, false).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if both values are equal', (done) => {\n    NE(true, true).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-ne.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "test",
    "name": "describe47",
    "testId": 47,
    "memberof": "test/async-ne.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-ne.js~describe47",
    "access": "public",
    "description": "NE",
    "lineNumber": 8
  },
  {
    "__docId__": 167,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "test/async-ne.js~describe47",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-ne.js~describe47.it48",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 168,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "test/async-ne.js~describe47",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-ne.js~describe47.it49",
    "access": "public",
    "description": "should resolve to true if both values are not equal",
    "lineNumber": 18
  },
  {
    "__docId__": 169,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "test/async-ne.js~describe47",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-ne.js~describe47.it50",
    "access": "public",
    "description": "should resolve to false if both values are equal",
    "lineNumber": 24
  },
  {
    "__docId__": 170,
    "kind": "testFile",
    "name": "test/async-not.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport Not from '../src/async-not';\n\n/**\n *\n */\ndescribe('Not', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(Not(true) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if the value is falsey', (done) => {\n    Not(true).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if the value is truthy', (done) => {\n    Not(true).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-not.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "test",
    "name": "describe51",
    "testId": 51,
    "memberof": "test/async-not.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-not.js~describe51",
    "access": "public",
    "description": "Not",
    "lineNumber": 8
  },
  {
    "__docId__": 172,
    "kind": "test",
    "name": "it52",
    "testId": 52,
    "memberof": "test/async-not.js~describe51",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-not.js~describe51.it52",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 173,
    "kind": "test",
    "name": "it53",
    "testId": 53,
    "memberof": "test/async-not.js~describe51",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-not.js~describe51.it53",
    "access": "public",
    "description": "should resolve to true if the value is falsey",
    "lineNumber": 18
  },
  {
    "__docId__": 174,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "test/async-not.js~describe51",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-not.js~describe51.it54",
    "access": "public",
    "description": "should resolve to false if the value is truthy",
    "lineNumber": 24
  },
  {
    "__docId__": 175,
    "kind": "testFile",
    "name": "test/async-or.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport Or from '../src/async-or';\n\n/**\n *\n */\ndescribe('Or', () => {\n  /**\n   *\n   */\n  it('should return a Promise', () => {\n    assert(Or(true, true) instanceof Promise);\n  });\n  /**\n   *\n   */\n  it('should resolve to true if one of the values are truthy', (done) => {\n    Or(true, true).then(x => (x ? done() : done(false)));\n  });\n  /**\n   *\n   */\n  it('should resolve to false if both resolved values are falsey', (done) => {\n    Or(false, false).then(x => (x ? done(false) : done()));\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-or.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 176,
    "kind": "test",
    "name": "describe55",
    "testId": 55,
    "memberof": "test/async-or.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-or.js~describe55",
    "access": "public",
    "description": "Or",
    "lineNumber": 8
  },
  {
    "__docId__": 177,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "test/async-or.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-or.js~describe55.it56",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 12
  },
  {
    "__docId__": 178,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "test/async-or.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-or.js~describe55.it57",
    "access": "public",
    "description": "should resolve to true if one of the values are truthy",
    "lineNumber": 18
  },
  {
    "__docId__": 179,
    "kind": "test",
    "name": "it58",
    "testId": 58,
    "memberof": "test/async-or.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-or.js~describe55.it58",
    "access": "public",
    "description": "should resolve to false if both resolved values are falsey",
    "lineNumber": 24
  },
  {
    "__docId__": 180,
    "kind": "testFile",
    "name": "test/async-repeat.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport AsyncRepeat from '../src/async-repeat';\n\n/**\n *\n */\ndescribe('AsyncRepeat', () => {\n  /**\n   *\n   */\n  describe('#until', () => {\n    /**\n     *\n     */\n    it('should return a Promise', () => {\n      assert(new AsyncRepeat(() => {}).until(true) instanceof Promise);\n    });\n    /**\n     *\n     */\n    it('should execute multiple times until the evaluator is true', (done) => {\n      let x = 0;\n\n      // eslint-disable-next-line no-plusplus\n      new AsyncRepeat(() => x++).until(() => x === 3).then(v => (v === 3 ? done() : done(false)));\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-repeat.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "test",
    "name": "describe59",
    "testId": 59,
    "memberof": "test/async-repeat.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-repeat.js~describe59",
    "access": "public",
    "description": "AsyncRepeat",
    "lineNumber": 8
  },
  {
    "__docId__": 182,
    "kind": "test",
    "name": "describe60",
    "testId": 60,
    "memberof": "test/async-repeat.js~describe59",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-repeat.js~describe59.describe60",
    "access": "public",
    "description": "#until",
    "lineNumber": 12
  },
  {
    "__docId__": 183,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "test/async-repeat.js~describe59.describe60",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-repeat.js~describe59.describe60.it61",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 16
  },
  {
    "__docId__": 184,
    "kind": "test",
    "name": "it62",
    "testId": 62,
    "memberof": "test/async-repeat.js~describe59.describe60",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-repeat.js~describe59.describe60.it62",
    "access": "public",
    "description": "should execute multiple times until the evaluator is true",
    "lineNumber": 22
  },
  {
    "__docId__": 185,
    "kind": "testFile",
    "name": "test/async-switch.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport AsyncSwitch from '../src/async-switch';\n\ndescribe('AsyncSwitch', () => {\n  describe('#case', () => {\n    it('should return the same AsyncSwitch reference', () => {\n      const asyncSwitch = new AsyncSwitch(9);\n      assert(asyncSwitch.case(9) === asyncSwitch);\n    });\n  });\n  describe('#break', () => {\n    it('should return the same AsyncSwitch reference', () => {\n      const asyncSwitch = new AsyncSwitch(9);\n      assert(asyncSwitch.break() === asyncSwitch);\n    });\n  });\n  describe('#do', () => {\n    it('should return an AsyncSwitch', () => {\n      assert(new AsyncSwitch(9).case(9).do(() => {}) instanceof AsyncSwitch);\n    });\n    it('should execute the scope if a match is successful', (done) => {\n      new AsyncSwitch(9).case(9).do(done);\n    });\n    it('should not execute the scope if a match is unsuccessful', (done) => {\n      new AsyncSwitch(9).case(8).do(() => done(false));\n      setTimeout(done, 100);\n    });\n    it('should not execute the scope if a match is successful but a break signal is received before.', (done) => {\n      new AsyncSwitch(9)\n        .case(7, 8, 9)\n        .do(() => {})\n        .break()\n        .case(7, 8, 9)\n        .do(() => done(false));\n\n      setTimeout(done, 100);\n    });\n  });\n  describe('#default', () => {\n    it('should return a Promise', () => {\n      assert(new AsyncSwitch(9).case(9).default(() => {}) instanceof Promise);\n    });\n    it('should execute the scope if no break signals are sent', (done) => {\n      new AsyncSwitch(9).case(9).default(done);\n    });\n    it('should execute the scope ifa match is unsuccessful', (done) => {\n      new AsyncSwitch(9).case(8).default(done);\n    });\n    it('should not execute the scope if a break signal is received before.', (done) => {\n      new AsyncSwitch(9)\n        .case(7, 8, 9)\n        .do(() => {})\n        .break()\n        .default(() => done(false));\n\n      setTimeout(done, 100);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-switch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "test",
    "name": "describe63",
    "testId": 63,
    "memberof": "test/async-switch.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-switch.js~describe63",
    "access": "public",
    "description": "AsyncSwitch",
    "lineNumber": 5
  },
  {
    "__docId__": 187,
    "kind": "test",
    "name": "describe64",
    "testId": 64,
    "memberof": "test/async-switch.js~describe63",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe64",
    "access": "public",
    "description": "#case",
    "lineNumber": 6
  },
  {
    "__docId__": 188,
    "kind": "test",
    "name": "it65",
    "testId": 65,
    "memberof": "test/async-switch.js~describe63.describe64",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe64.it65",
    "access": "public",
    "description": "should return the same AsyncSwitch reference",
    "lineNumber": 7
  },
  {
    "__docId__": 189,
    "kind": "test",
    "name": "describe66",
    "testId": 66,
    "memberof": "test/async-switch.js~describe63",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe66",
    "access": "public",
    "description": "#break",
    "lineNumber": 12
  },
  {
    "__docId__": 190,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "test/async-switch.js~describe63.describe66",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe66.it67",
    "access": "public",
    "description": "should return the same AsyncSwitch reference",
    "lineNumber": 13
  },
  {
    "__docId__": 191,
    "kind": "test",
    "name": "describe68",
    "testId": 68,
    "memberof": "test/async-switch.js~describe63",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe68",
    "access": "public",
    "description": "#do",
    "lineNumber": 18
  },
  {
    "__docId__": 192,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "test/async-switch.js~describe63.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe68.it69",
    "access": "public",
    "description": "should return an AsyncSwitch",
    "lineNumber": 19
  },
  {
    "__docId__": 193,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "test/async-switch.js~describe63.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe68.it70",
    "access": "public",
    "description": "should execute the scope if a match is successful",
    "lineNumber": 22
  },
  {
    "__docId__": 194,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "test/async-switch.js~describe63.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe68.it71",
    "access": "public",
    "description": "should not execute the scope if a match is unsuccessful",
    "lineNumber": 25
  },
  {
    "__docId__": 195,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "test/async-switch.js~describe63.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe68.it72",
    "access": "public",
    "description": "should not execute the scope if a match is successful but a break signal is received before.",
    "lineNumber": 29
  },
  {
    "__docId__": 196,
    "kind": "test",
    "name": "describe73",
    "testId": 73,
    "memberof": "test/async-switch.js~describe63",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe73",
    "access": "public",
    "description": "#default",
    "lineNumber": 40
  },
  {
    "__docId__": 197,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "test/async-switch.js~describe63.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe73.it74",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 41
  },
  {
    "__docId__": 198,
    "kind": "test",
    "name": "it75",
    "testId": 75,
    "memberof": "test/async-switch.js~describe63.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe73.it75",
    "access": "public",
    "description": "should execute the scope if no break signals are sent",
    "lineNumber": 44
  },
  {
    "__docId__": 199,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "test/async-switch.js~describe63.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe73.it76",
    "access": "public",
    "description": "should execute the scope ifa match is unsuccessful",
    "lineNumber": 47
  },
  {
    "__docId__": 200,
    "kind": "test",
    "name": "it77",
    "testId": 77,
    "memberof": "test/async-switch.js~describe63.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-switch.js~describe63.describe73.it77",
    "access": "public",
    "description": "should not execute the scope if a break signal is received before.",
    "lineNumber": 50
  },
  {
    "__docId__": 201,
    "kind": "testFile",
    "name": "test/async-while.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport AsyncWhile from '../src/async-while';\n\n/**\n *\n */\ndescribe('AsyncWhile', () => {\n  /**\n   *\n   */\n  describe('#do', () => {\n    /**\n     *\n     */\n    it('should return a Promise', () => {\n      assert(new AsyncWhile(false).do(() => {}) instanceof Promise);\n    });\n    /**\n     *\n     */\n    it('should execute multiple times until the evaluator is false', (done) => {\n      let x = 0;\n\n      // eslint-disable-next-line no-plusplus\n      new AsyncWhile(() => x < 3).do(() => x++).then(v => (v === 3 ? done() : done(false)));\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/regrets.js/test/async-while.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "test",
    "name": "describe78",
    "testId": 78,
    "memberof": "test/async-while.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/async-while.js~describe78",
    "access": "public",
    "description": "AsyncWhile",
    "lineNumber": 8
  },
  {
    "__docId__": 203,
    "kind": "test",
    "name": "describe79",
    "testId": 79,
    "memberof": "test/async-while.js~describe78",
    "testDepth": 1,
    "static": true,
    "longname": "test/async-while.js~describe78.describe79",
    "access": "public",
    "description": "#do",
    "lineNumber": 12
  },
  {
    "__docId__": 204,
    "kind": "test",
    "name": "it80",
    "testId": 80,
    "memberof": "test/async-while.js~describe78.describe79",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-while.js~describe78.describe79.it80",
    "access": "public",
    "description": "should return a Promise",
    "lineNumber": 16
  },
  {
    "__docId__": 205,
    "kind": "test",
    "name": "it81",
    "testId": 81,
    "memberof": "test/async-while.js~describe78.describe79",
    "testDepth": 2,
    "static": true,
    "longname": "test/async-while.js~describe78.describe79.it81",
    "access": "public",
    "description": "should execute multiple times until the evaluator is false",
    "lineNumber": 22
  }
]