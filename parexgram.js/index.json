[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/alternation.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport Feed from './feed';\nimport Matcher from './matcher';\n\n/**\n * @desc\n * Represents an alternation of matchers\n *\n * Matchers are matched in sequence. If a matcher matches\n * successfully, that matcher's result is returned,\n * otherwise other matchers will be matched until all\n * of the matchers fails.\n */\nexport default class Alternation extends Matcher {\n  /**\n   *\n   * @param {Array} matchers\n   */\n  constructor(matchers) {\n    super();\n    this.matchers = matchers;\n  }\n\n  /**\n   *\n   * @param {Feed} feed\n   * @returns {Array|String}\n   */\n  parse(feed) {\n    if (feed instanceof Feed) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const matcher of this.matchers) {\n        const r = matcher.parse(feed);\n\n        if (typeof r !== 'undefined') {\n          return r;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/alternation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Alternation",
    "memberof": "src/alternation.js",
    "static": true,
    "longname": "src/alternation.js~Alternation",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/alternation.js",
    "importStyle": "Alternation",
    "description": "Represents an alternation of matchers\n\nMatchers are matched in sequence. If a matcher matches\nsuccessfully, that matcher's result is returned,\notherwise other matchers will be matched until all\nof the matchers fails.",
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "src/matcher.js~Matcher"
    ]
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alternation.js~Alternation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alternation.js~Alternation#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "matchers",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "matchers",
    "memberof": "src/alternation.js~Alternation",
    "static": false,
    "longname": "src/alternation.js~Alternation#matchers",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "parse",
    "memberof": "src/alternation.js~Alternation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alternation.js~Alternation#parse",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array|String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Feed"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array",
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/charset.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport Feed from './feed';\nimport Matcher from './matcher';\n\n/**\n * @desc\n * Represents a consumer literal\n */\nexport default class CharSet extends Matcher {\n  /**\n   * Constructs a CharSet from a given value.\n   * @param {!String} value\n   */\n  constructor(value) {\n    super();\n    /**\n     * @ignore\n     */\n    this.value = value;\n  }\n\n  /**\n   * Attempts to consume the prefix of the feed\n   * given the CharSet's value.\n   * @param {!Feed} feed\n   * @return {String}\n   */\n  parse(feed) {\n    let result;\n    if (feed instanceof Feed) {\n      const { value } = this;\n      if (feed.eat(value)) {\n        result = value;\n      }\n    }\n    return result;\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/charset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "CharSet",
    "memberof": "src/charset.js",
    "static": true,
    "longname": "src/charset.js~CharSet",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/charset.js",
    "importStyle": "CharSet",
    "description": "Represents a consumer literal",
    "lineNumber": 35,
    "interface": false,
    "extends": [
      "src/matcher.js~Matcher"
    ]
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/charset.js~CharSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/charset.js~CharSet#constructor",
    "access": "public",
    "description": "Constructs a CharSet from a given value.",
    "lineNumber": 40,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "value",
    "memberof": "src/charset.js~CharSet",
    "static": false,
    "longname": "src/charset.js~CharSet#value",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "parse",
    "memberof": "src/charset.js~CharSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/charset.js~CharSet#parse",
    "access": "public",
    "description": "Attempts to consume the prefix of the feed\ngiven the CharSet's value.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": false,
        "types": [
          "Feed"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/feed.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nconst { min, max } = Math;\n\n/**\n * @desc\n * Represents the consumable string for parsing purposes\n */\nexport default class Feed {\n  /**\n   * Constructs a Feed from a given string.\n   * @param {!String} feed\n   */\n  constructor(feed) {\n    /**\n     * @ignore\n     */\n    this.feed = feed;\n    /**\n     * @ignore\n     */\n    this.feedSize = feed.length;\n    /**\n     * @ignore\n     */\n    this.cursor = 0;\n  }\n\n  /**\n   * @desc\n   * Get the first set of string from the Feed\n   * @param {!number} size\n   * @return {String}\n   */\n  peek(size) {\n    const { cursor } = this;\n    return this.feed.substring(cursor, min(cursor + size, this.feedSize));\n  }\n\n  /**\n   * @desc\n   * Checks if the given string is a prefix of the Feed,\n   * then eats the prefix.\n   * @param {!String} str\n   * @return {Boolean}\n   */\n  eat(str) {\n    const size = str.length;\n    if (this.peek(size) === str) {\n      this.cursor = min(this.cursor + size, this.feedSize);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Reverts the previous feed state.\n   * @param {Number} size\n   */\n  revert(size) {\n    this.cursor = max(this.cursor - size, 0);\n  }\n\n  /**\n   * @desc\n   * Get the unconsumed size of the Feed\n   * @type {Number}\n   */\n  get size() {\n    return this.feedSize - this.cursor;\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/feed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "min",
    "memberof": "src/feed.js",
    "static": true,
    "longname": "src/feed.js~min",
    "access": "public",
    "export": false,
    "importPath": "parexgram-js/src/feed.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@license",
        "tagValue": "MIT License\n\nCopyright (c) 2019 Alexis Munsayac\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      {
        "tagName": "@author",
        "tagValue": "Alexis Munsayac <alexis.munsayac@gmail.com>"
      },
      {
        "tagName": "@copyright",
        "tagValue": "Alexis Munsayac 2019"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "class",
    "name": "Feed",
    "memberof": "src/feed.js",
    "static": true,
    "longname": "src/feed.js~Feed",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/feed.js",
    "importStyle": "Feed",
    "description": "Represents the consumable string for parsing purposes",
    "lineNumber": 34,
    "interface": false
  },
  {
    "__docId__": 61,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/feed.js~Feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/feed.js~Feed#constructor",
    "access": "public",
    "description": "Constructs a Feed from a given string.",
    "lineNumber": 39,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "feed",
    "memberof": "src/feed.js~Feed",
    "static": false,
    "longname": "src/feed.js~Feed#feed",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "feedSize",
    "memberof": "src/feed.js~Feed",
    "static": false,
    "longname": "src/feed.js~Feed#feedSize",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "cursor",
    "memberof": "src/feed.js~Feed",
    "static": false,
    "longname": "src/feed.js~Feed#cursor",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "ignore": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "peek",
    "memberof": "src/feed.js~Feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/feed.js~Feed#peek",
    "access": "public",
    "description": "Get the first set of string from the Feed",
    "lineNumber": 60,
    "params": [
      {
        "nullable": false,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "eat",
    "memberof": "src/feed.js~Feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/feed.js~Feed#eat",
    "access": "public",
    "description": "Checks if the given string is a prefix of the Feed,\nthen eats the prefix.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "revert",
    "memberof": "src/feed.js~Feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/feed.js~Feed#revert",
    "access": "public",
    "description": "Reverts the previous feed state.",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "get",
    "name": "size",
    "memberof": "src/feed.js~Feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/feed.js~Feed#size",
    "access": "public",
    "description": "Get the unconsumed size of the Feed",
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\n\nexport { default as Feed } from './feed';\n\nexport { default as Matcher } from './matcher';\n\nexport { default as CharSet } from './charset';\nexport { default as Range } from './range';\n\nexport { default as Quantifier } from './quantifier';\n\nexport { default as Sequence } from './sequence';\nexport { default as Alternation } from './alternation';\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/matcher.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\n\n/**\n * @desc\n * An Interface of all matcher classes\n *\n * @interface\n */\nexport default class Matcher {\n  /**\n   * @desc\n   * Given a feed, attempt to match and consume\n   * the prefix of a feed.\n   * @param {Feed} feed\n   * @abstract\n   */\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  parse(feed) {\n\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/matcher.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "Matcher",
    "memberof": "src/matcher.js",
    "static": true,
    "longname": "src/matcher.js~Matcher",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/matcher.js",
    "importStyle": "Matcher",
    "description": "An Interface of all matcher classes",
    "lineNumber": 35,
    "interface": true
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "parse",
    "memberof": "src/matcher.js~Matcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/matcher.js~Matcher#parse",
    "access": "public",
    "description": "Given a feed, attempt to match and consume\nthe prefix of a feed.",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Feed"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/quantifier.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport Feed from './feed';\nimport Matcher from './matcher';\nimport revert from './utils';\n/**\n * @desc\n * Represents a pattern quantifier which collects\n * successive matches given a range.\n */\nexport default class Quantifier extends Matcher {\n  /**\n   *\n   * @param {?Number} min\n   * @param {?Number} max\n   */\n  constructor(matcher, min, max) {\n    super();\n    if (matcher instanceof Matcher) {\n      /**\n       * @ignore\n       */\n      this.matcher = matcher;\n      /**\n       * @ignore\n       */\n      this.min = typeof min === 'number' ? min : 0;\n      /**\n       * @ignore\n       */\n      this.max = typeof max === 'number' ? max : undefined;\n    }\n  }\n\n  /**\n   * Attempts to consume prefixes of a Feed\n   * multiple times until a prefix fails to match.\n   *\n   * If the amount of matched prefixes lies within\n   * the quantifier range, an array of matched\n   * prefixes is returned.\n   *\n   * @param {!Feed} feed\n   * @returns {Array}\n   */\n  parse(feed) {\n    if (feed instanceof Feed) {\n      const { matcher, min, max } = this;\n      const isNumber = typeof max === 'number';\n      if (matcher instanceof Matcher) {\n        const result = [];\n        let parsed = matcher.parse(feed);\n        let count = 0;\n        while (typeof parsed !== 'undefined') {\n          result.push(parsed);\n          count += 1;\n          if (isNumber && count > max) {\n            break;\n          }\n          parsed = matcher.parse(feed);\n        }\n        if (count >= min) {\n          return result;\n        }\n        revert(feed, result);\n      }\n    }\n    return undefined;\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/quantifier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "class",
    "name": "Quantifier",
    "memberof": "src/quantifier.js",
    "static": true,
    "longname": "src/quantifier.js~Quantifier",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/quantifier.js",
    "importStyle": "Quantifier",
    "description": "Represents a pattern quantifier which collects\nsuccessive matches given a range.",
    "lineNumber": 36,
    "interface": false,
    "extends": [
      "src/matcher.js~Matcher"
    ]
  },
  {
    "__docId__": 77,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/quantifier.js~Quantifier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/quantifier.js~Quantifier#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "matcher",
    "memberof": "src/quantifier.js~Quantifier",
    "static": false,
    "longname": "src/quantifier.js~Quantifier#matcher",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "min",
    "memberof": "src/quantifier.js~Quantifier",
    "static": false,
    "longname": "src/quantifier.js~Quantifier#min",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "max",
    "memberof": "src/quantifier.js~Quantifier",
    "static": false,
    "longname": "src/quantifier.js~Quantifier#max",
    "access": "public",
    "description": "",
    "lineNumber": 56,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "parse",
    "memberof": "src/quantifier.js~Quantifier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/quantifier.js~Quantifier#parse",
    "access": "public",
    "description": "Attempts to consume prefixes of a Feed\nmultiple times until a prefix fails to match.\n\nIf the amount of matched prefixes lies within\nthe quantifier range, an array of matched\nprefixes is returned.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Feed"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/range.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport Feed from './feed';\nimport Matcher from './matcher';\n/**\n * @desc\n * Represents a range of characters\n */\nexport default class Range extends Matcher {\n  /**\n   *\n   * @param {?String} min\n   * @param {?String} max\n   */\n  constructor(min, max) {\n    super();\n    /**\n     * @ignore\n     */\n    this.min = typeof min === 'string' ? min : '\\x00';\n    /**\n     * @ignore\n     */\n    this.max = typeof max === 'string' ? max : '\\xFF';\n  }\n\n  /**\n   * Attempts to consume a prefix character\n   * of the feed given that the prefix lies\n   * within the range.\n   *\n   * @param {!Feed} feed\n   * @returns {String}\n   */\n  parse(feed) {\n    if (feed instanceof Feed) {\n      const c = feed.peek(1);\n      if (this.min <= c && c <= this.max) {\n        feed.eat(c);\n        return c;\n      }\n    }\n    return undefined;\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/range.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "class",
    "name": "Range",
    "memberof": "src/range.js",
    "static": true,
    "longname": "src/range.js~Range",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/range.js",
    "importStyle": "Range",
    "description": "Represents a range of characters",
    "lineNumber": 34,
    "interface": false,
    "extends": [
      "src/matcher.js~Matcher"
    ]
  },
  {
    "__docId__": 84,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/range.js~Range",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/range.js~Range#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "min",
    "memberof": "src/range.js~Range",
    "static": false,
    "longname": "src/range.js~Range#min",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "max",
    "memberof": "src/range.js~Range",
    "static": false,
    "longname": "src/range.js~Range#max",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "parse",
    "memberof": "src/range.js~Range",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/range.js~Range#parse",
    "access": "public",
    "description": "Attempts to consume a prefix character\nof the feed given that the prefix lies\nwithin the range.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "Feed"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/sequence.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\nimport Feed from './feed';\nimport Matcher from './matcher';\nimport revert from './utils';\n\n\n/**\n * Represents a succession of matches\n *\n * if one of the matches fail, the sequence\n * returns an empty result.\n */\nexport default class Sequence extends Matcher {\n  /**\n   * Creates a Sequence from an array of Matchers\n   * @param {Array} matchers\n   */\n  constructor(matchers) {\n    super();\n    this.matchers = matchers;\n  }\n\n  /**\n   * Attemps to consume a feed with the array of\n   * Matchers.\n   *\n   * Returns an empty result if one of the matchers\n   * fails to match.\n   * @param {Feed} feed\n   * @return {Array}\n   */\n  parse(feed) {\n    if (feed instanceof Feed) {\n      if (this.matchers.length > 0) {\n        const result = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for (const matcher of this.matchers) {\n          const r = matcher.parse(feed);\n\n          const flag = typeof r === 'undefined';\n          if (flag) {\n            revert(feed, result);\n            return undefined;\n          }\n\n          if (!flag) {\n            result.push(r);\n          }\n        }\n        return result;\n      }\n    }\n    return undefined;\n  }\n}\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/sequence.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "Sequence",
    "memberof": "src/sequence.js",
    "static": true,
    "longname": "src/sequence.js~Sequence",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/sequence.js",
    "importStyle": "Sequence",
    "description": "Represents a succession of matches\n\nif one of the matches fail, the sequence\nreturns an empty result.",
    "lineNumber": 39,
    "interface": false,
    "extends": [
      "src/matcher.js~Matcher"
    ]
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/sequence.js~Sequence",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sequence.js~Sequence#constructor",
    "access": "public",
    "description": "Creates a Sequence from an array of Matchers",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "matchers",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "matchers",
    "memberof": "src/sequence.js~Sequence",
    "static": false,
    "longname": "src/sequence.js~Sequence#matchers",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "parse",
    "memberof": "src/sequence.js~Sequence",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sequence.js~Sequence#parse",
    "access": "public",
    "description": "Attemps to consume a feed with the array of\nMatchers.\n\nReturns an empty result if one of the matchers\nfails to match.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Feed"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/utils.js",
    "content": "/**\n * @license\n * MIT License\n *\n * Copyright (c) 2019 Alexis Munsayac\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * @author Alexis Munsayac <alexis.munsayac@gmail.com>\n * @copyright Alexis Munsayac 2019\n */\n\n/**\n * @ignore\n * @param {*} feed\n * @param {*} result\n */\nconst revert = (feed, result) => {\n  const size = result.length - 1;\n  for (let i = size; i >= 0; i -= 1) {\n    const r = result[i];\n    if (r instanceof Array) {\n      revert(feed, r);\n    }\n    if (typeof r === 'string') {\n      feed.revert(r.length);\n    }\n  }\n};\n\nexport default revert;\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/src/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "revert",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~revert",
    "access": "public",
    "export": true,
    "importPath": "parexgram-js/src/utils.js",
    "importStyle": "revert",
    "description": "",
    "lineNumber": 34,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "feed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# parexgram.js\n\n🔠 Parsing Expression Grammars for JS\n\n[![NPM](https://nodei.co/npm/parexgram-js.png)](https://nodei.co/npm/parexgram-js/)\n\n[![](https://data.jsdelivr.com/v1/package/npm/parexgram-js/badge)](https://www.jsdelivr.com/package/npm/parexgram-js)\n[![HitCount](http://hits.dwyl.io/lxsmnsyc/parexgram.js.svg)](http://hits.dwyl.io/lxsmnsyc/parexgram.js)\n\n| Platform | Build Status |\n| --- | --- |\n| Linux | [![Build Status](https://travis-ci.org/LXSMNSYC/parexgram.js.svg?branch=master)](https://travis-ci.org/LXSMNSYC/parexgram.js) |\n| Windows | [![Build status](https://ci.appveyor.com/api/projects/status/yrqmaodw7215oj6a?svg=true)](https://ci.appveyor.com/project/LXSMNSYC/parexgram-js) |\n\n[![codecov](https://codecov.io/gh/LXSMNSYC/parexgram.js/branch/master/graph/badge.svg)](https://codecov.io/gh/LXSMNSYC/parexgram.js)\n\n[![Known Vulnerabilities](https://snyk.io/test/github/LXSMNSYC/parexgram.js/badge.svg?targetFile=package.json)](https://snyk.io/test/github/LXSMNSYC/parexgram.js?targetFile=package.json)\n[![devDependencies Status](https://david-dm.org/lxsmnsyc/parexgram.js/dev-status.svg)](https://david-dm.org/lxsmnsyc/parexgram.js?type=dev)\n\n## Install\n\nNPM\n\n```bash\nnpm i parexgram-js\n```\n\nCDN\n\n```html\n<script style=\"https://cdn.jsdelivr.net/npm/parexgram-js/dist/index.min.js\"></script>\n```\n\n## Usage\n\n### Loading the module\n\n#### CommonJS\n\n```js\nconst Parexgram = require('parexgram-js');\n```\n\n#### Browser\n\nThe Browser version provides an object named 'Parexgram' which you can use to access the provided classes.\n\n### Using the classes\n\n#### Feed\n\nFeed serves as the consumable string for the Parexgram. Matchers relies on a Feed for extracting/consuming strings. If a Matcher successfully consumes the Feed prefix, the Feed value changes.\n\n```js\nconst feed = new Feed('some expression');\n```\n\n#### CharSet\n\nCharSet is a Matcher class which extracts an exact sequence of a string from the Feed prefix.\n\nIf a CharSet attempts to consume the Feed, it will return the exact match if the match was successful, otherwise, the CharSet will return an undefined result.\n\n```js\nconst feed = new Feed('some expression');\nconsole.log(new CharSet('some').parse(feed)); // some\n```\n\n#### Range\n\nRange is a Matcher class which extracts a single character from the Feed prefix if the character lies within the Character range.\n\nIf a Range attempts to consume the Feed, it will return the character that matches, otherwise, undefined is returned.\n\n```js\nconst feed = new Feed('some expression');\nconsole.log(new Range('a', 'z').parse(feed)); // s\n```\n\n#### Sequence\n\nSequence is a Matcher class which extracts an exact sequence of matches given a sequence of matchers from a Feed prefix.\n\nIf a CharSet attempts to consume the Feed, it will return the exact matches inside of an array if the match was successful, otherwise, the CharSet will return an undefined result.\n\n```js\nconst feed = new Feed('some expression');\nconst alpha = new Range('a', 'z');\nconsole.log(new Sequence([alpha, alpha]).parse(feed)); // ['s', 'o'];\n```\n\n#### Alternation\n\nAlternation is a Matcher class which extracts an exact match given a sequence of matchers from a Feed prefix. Unlike Sequence, Alternation will only return one of the matchers result.\n\n```js\nconst feed = new Feed('some expression');\nconst alpha = new Range('a', 'z');\nconsole.log(new Alternation([alpha, alpha]).parse(feed)); // 's';\n```\n\n#### Quantifier\n\nQuantifier is a Matcher class which extracts a series of matches by a given matcher from a Feed prefix. Given a range, if a Quantifier collects an amount of matches between the given range, the Quantifier returns an array of those matches, whereas if the Quantifier collects an amount less than the minimum boundary of the range, the Quantifier returns undefined.\n\n```js\nconst feed = new Feed('some expression');\nconst alpha = new Range('a', 'z');\nconsole.log(new Quantifier(alpha, 0).parse(feed)); // ['s', 'o', 'm', 'e']\n```\n\n#### Matcher\n\nMatcher is an interface used for the above classes. This signifies that the object can consume a Feed prefix. You can extend the Matcher to create your own custom Matcher.\n\n## Documentation\n\nOnline Documentation can be found  at the [official Doc Site](https://lxsmnsyc.github.io/parexgram.js/).\n\n## Examples\n\n* [Arithmetic Parser](https://github.com/LXSMNSYC/arithmetic-parser-demo)\n\n## Build\n\nClone the repo then run:\n\n```bash\nnpm install\n```\n\nTo build the docs, coverages, commonjs and browser module:\n\n```bash\nnpm run build\n```\n",
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"parexgram-js\",\n  \"version\": \"0.1.3\",\n  \"description\": \"Parsing Expression Grammar for JS\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"linux-mocha\": \"./node_modules/.bin/mocha --require @babel/register -R spec --recursive\",\n    \"linux-test\": \"./node_modules/.bin/nyc --reporter=html npm run linux-mocha\",\n    \"linux-docs\": \"./node_modules/.bin/esdoc\",\n    \"linux-cjs\": \"./node_modules/.bin/rollup src/index.js --format cjs --name \\\"Parexgram\\\" --file index.js\",\n    \"linux-browser\": \"./node_modules/.bin/rollup src/index.js --format iife --name \\\"Parexgram\\\" --file dist/index.js\",\n    \"linux-minify\": \"npm run linux-browser && ./node_modules/.bin/terser dist/index.js --compress --mangle --output dist/index.min.js\",\n    \"linux-build\": \"npm run linux-cjs && npm run linux-minify && npm run linux-docs && npm run linux-test\",\n    \"win-mocha\": \"node node_modules/mocha/bin/mocha --require @babel/register -R spec --recursive\",\n    \"win-test\": \"node node_modules/nyc/bin/nyc.js --reporter=html npm run win-mocha\",\n    \"win-docs\": \"node node_modules/esdoc/out/src/ESDocCLI.js\",\n    \"win-cjs\": \"node node_modules/.bin/rollup src/index.js --format cjs --name \\\"Parexgram\\\" --file index.js\",\n    \"win-browser\": \"node node_modules/.bin/rollup src/index.js --format iife --name \\\"Parexgram\\\" --file dist/index.js\",\n    \"win-minify\": \"npm run win-browser && node node_modules/.bin/terser dist/index.js --compress --mangle --output dist/index.min.js\",\n    \"win-build\": \"npm run win-cjs && npm run win-minify && npm run win-docs && npm run win-test\",\n    \"mocha\": \"npm run linux-mocha || npm run win-mocha\",\n    \"test\": \"npm run linux-test || npm run win-test\",\n    \"docs\": \"npm run linux-docs || npm run win-docs\",\n    \"cjs\": \"npm run linux-cjs || npm run win-cjs\",\n    \"browser\": \"npm run linux-browser || npm run win-browser\",\n    \"minify\": \"npm run linux-minify || npm run win-minify\",\n    \"build\": \"npm run cjs && npm run minify && npm run docs && npm test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/LXSMNSYC/parexgram.js.git\"\n  },\n  \"keywords\": [\n    \"parser\",\n    \"lexer\",\n    \"peg\",\n    \"grammar\"\n  ],\n  \"author\": \"LXSMNSYC (alexis.munsayac@gmail.com)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/LXSMNSYC/parexgram.js/issues\"\n  },\n  \"homepage\": \"https://github.com/LXSMNSYC/parexgram.js#readme\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.3.4\",\n    \"@babel/preset-env\": \"^7.3.4\",\n    \"@babel/register\": \"^7.0.0\",\n    \"acorn\": \"^6.1.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-integrate-test-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.15.1\",\n    \"eslint-config-airbnb-base\": \"^13.1.0\",\n    \"eslint-plugin-import\": \"^2.16.0\",\n    \"mocha\": \"^6.0.2\",\n    \"nyc\": \"^13.3.0\",\n    \"rollup\": \"^1.6.0\",\n    \"terser\": \"^3.17.0\"\n  }\n}\n",
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 95,
    "kind": "testFile",
    "name": "test/alternation.js",
    "content": "\n/* eslint-disable no-undef */\nimport assert from 'assert';\nimport {\n  Sequence, CharSet, Feed, Alternation,\n} from '../src';\n\ndescribe('Alternation', () => {\n  /**\n   *\n   */\n  describe('#parse', () => {\n    /**\n     *\n     */\n    it('should return an Array if a matcher returns an Array', () => {\n      /**\n       *\n       */\n      const m1 = new Sequence([\n        new CharSet('t'), new CharSet('e'),\n      ]);\n\n      const alt = new Alternation([m1]);\n\n      assert(alt.parse(new Feed('test')) instanceof Array);\n    });\n    /**\n     *\n     */\n    it('should return an String if a matcher returns a String', () => {\n      /**\n       *\n       */\n      const alt = new Alternation([new CharSet('t')]);\n\n      assert(typeof alt.parse(new Feed('test')) === 'string');\n    });\n    /**\n     *\n     */\n    it('should return undefined if there are no matchers', () => {\n      /**\n       *\n       */\n      const alt = new Alternation([]);\n\n      assert(typeof alt.parse(new Feed('test')) === 'undefined');\n    });\n    /**\n     *\n     */\n    it('should return undefined if there are no matchers', () => {\n      /**\n       *\n       */\n      assert(typeof new Alternation([]).parse() === 'undefined');\n      assert(typeof new Alternation([]).parse(1) === 'undefined');\n      assert(typeof new Alternation([]).parse(true) === 'undefined');\n      assert(typeof new Alternation([]).parse('') === 'undefined');\n      assert(typeof new Alternation([]).parse([]) === 'undefined');\n      assert(typeof new Alternation([]).parse({}) === 'undefined');\n      assert(typeof new Alternation([]).parse(() => {}) === 'undefined');\n    });\n    /**\n     *\n     */\n    it('should return the other matches if the previous matches fails', () => {\n      /**\n       *\n       */\n      const alt = new Alternation([\n        new CharSet('e'), new CharSet('t'),\n      ]);\n      assert(typeof alt.parse(new Feed('test')) === 'string');\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/test/alternation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/alternation.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/alternation.js~describe0",
    "access": "public",
    "description": "Alternation",
    "lineNumber": 8
  },
  {
    "__docId__": 97,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "test/alternation.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/alternation.js~describe0.describe1",
    "access": "public",
    "description": "#parse",
    "lineNumber": 12
  },
  {
    "__docId__": 98,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/alternation.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/alternation.js~describe0.describe1.it2",
    "access": "public",
    "description": "should return an Array if a matcher returns an Array",
    "lineNumber": 16
  },
  {
    "__docId__": 99,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/alternation.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/alternation.js~describe0.describe1.it3",
    "access": "public",
    "description": "should return an String if a matcher returns a String",
    "lineNumber": 31
  },
  {
    "__docId__": 100,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "test/alternation.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/alternation.js~describe0.describe1.it4",
    "access": "public",
    "description": "should return undefined if there are no matchers",
    "lineNumber": 42
  },
  {
    "__docId__": 101,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/alternation.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/alternation.js~describe0.describe1.it5",
    "access": "public",
    "description": "should return undefined if there are no matchers",
    "lineNumber": 53
  },
  {
    "__docId__": 102,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "test/alternation.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/alternation.js~describe0.describe1.it6",
    "access": "public",
    "description": "should return the other matches if the previous matches fails",
    "lineNumber": 68
  },
  {
    "__docId__": 103,
    "kind": "testFile",
    "name": "test/charset.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport { CharSet, Feed } from '../src';\n\ndescribe('CharSet', () => {\n  /**\n   *\n   */\n  describe('#parse', () => {\n    /**\n     *\n     */\n    it('should return a String', () => {\n      /**\n       *\n       */\n      assert(typeof new CharSet('test').parse(new Feed('test')) === 'string');\n    });\n    /**\n     *\n     */\n    it('should return a String equal to the CharSet if successful', () => {\n      /**\n       *\n       */\n      assert(new CharSet('test').parse(new Feed('test')) === 'test');\n    });\n    /**\n     *\n     */\n    it('should return a undefined if unsuccessful', () => {\n      /**\n       *\n       */\n      assert(typeof new CharSet('test').parse(new Feed('tset')) === 'undefined');\n    });\n    /**\n     *\n     */\n    it('should return a undefined if a non-Feed is received', () => {\n      /**\n       *\n       */\n      assert(typeof new CharSet('test').parse() === 'undefined');\n      assert(typeof new CharSet('test').parse(1) === 'undefined');\n      assert(typeof new CharSet('test').parse(true) === 'undefined');\n      assert(typeof new CharSet('test').parse('') === 'undefined');\n      assert(typeof new CharSet('test').parse([]) === 'undefined');\n      assert(typeof new CharSet('test').parse({}) === 'undefined');\n      assert(typeof new CharSet('test').parse(() => {}) === 'undefined');\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/test/charset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "test",
    "name": "describe7",
    "testId": 7,
    "memberof": "test/charset.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/charset.js~describe7",
    "access": "public",
    "description": "CharSet",
    "lineNumber": 5
  },
  {
    "__docId__": 105,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/charset.js~describe7",
    "testDepth": 1,
    "static": true,
    "longname": "test/charset.js~describe7.describe8",
    "access": "public",
    "description": "#parse",
    "lineNumber": 9
  },
  {
    "__docId__": 106,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/charset.js~describe7.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "test/charset.js~describe7.describe8.it9",
    "access": "public",
    "description": "should return a String",
    "lineNumber": 13
  },
  {
    "__docId__": 107,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "test/charset.js~describe7.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "test/charset.js~describe7.describe8.it10",
    "access": "public",
    "description": "should return a String equal to the CharSet if successful",
    "lineNumber": 22
  },
  {
    "__docId__": 108,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/charset.js~describe7.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "test/charset.js~describe7.describe8.it11",
    "access": "public",
    "description": "should return a undefined if unsuccessful",
    "lineNumber": 31
  },
  {
    "__docId__": 109,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "test/charset.js~describe7.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "test/charset.js~describe7.describe8.it12",
    "access": "public",
    "description": "should return a undefined if a non-Feed is received",
    "lineNumber": 40
  },
  {
    "__docId__": 110,
    "kind": "testFile",
    "name": "test/feed.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport Feed from '../src/feed';\n\n/**\n *\n */\ndescribe('Feed', () => {\n  /**\n   *\n   */\n  describe('#peek', () => {\n    /**\n     *\n     */\n    it('should return a String', () => {\n      /**\n       *\n       */\n      const f = new Feed('Hello World');\n\n      assert(typeof f.peek(5) === 'string');\n    });\n    /**\n     *\n     */\n    it('should return the correct string', () => {\n      /**\n       *\n       */\n      const f = new Feed('Hello World');\n\n      assert(f.peek(5) === 'Hello');\n    });\n  });\n  /**\n   *\n   */\n  describe('#eat', () => {\n    /**\n     *\n     */\n    it('should return a Boolean', () => {\n      /**\n       *\n       */\n      const f = new Feed('Hello World');\n\n      assert(typeof f.eat('Hello') === 'boolean');\n    });\n    /**\n     *\n     */\n    it('should return true if the given string is a prefix of the Feed.', () => {\n      /**\n       *\n       */\n      const f = new Feed('Hello World');\n\n      assert(f.eat('Hello') === true);\n    });\n    /**\n     *\n     */\n    it('should return false if the given string is not a prefix of the Feed.', () => {\n      /**\n       *\n       */\n      const f = new Feed('Hello World');\n\n      assert(f.eat('olleH') === false);\n    });\n  });\n  /**\n   *\n   */\n  describe('#revert', () => {\n    /**\n     *\n     */\n    it('should revert successfully.', () => {\n      /**\n       *\n       */\n      const f = new Feed('Hello World');\n      f.eat('Hello');\n      f.revert(5);\n      assert(f.eat('Hello'));\n    });\n  });\n  /**\n   *\n   */\n  describe('#size', () => {\n    /**\n     *\n     */\n    it('should return a Number', () => {\n      /**\n       *\n       */\n      const f = new Feed('Hello World');\n\n      assert(typeof f.size === 'number');\n    });\n    /**\n     *\n     */\n    it('should return the size equal to the received string of the Feed, if #eat is not called.', () => {\n      /**\n       *\n       */\n      const s = 'Hello World';\n      const l = s.length;\n      const f = new Feed(s);\n\n      assert(f.size === l);\n    });\n    /**\n     *\n     */\n    it('should return the correct size if #eat is not called.', () => {\n      /**\n       *\n       */\n      const s = 'Hello World';\n      const l = s.length;\n      const f = new Feed(s);\n\n      f.eat('Hello');\n      assert(f.size === l - 5);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/test/feed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "test",
    "name": "describe13",
    "testId": 13,
    "memberof": "test/feed.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/feed.js~describe13",
    "access": "public",
    "description": "Feed",
    "lineNumber": 8
  },
  {
    "__docId__": 112,
    "kind": "test",
    "name": "describe14",
    "testId": 14,
    "memberof": "test/feed.js~describe13",
    "testDepth": 1,
    "static": true,
    "longname": "test/feed.js~describe13.describe14",
    "access": "public",
    "description": "#peek",
    "lineNumber": 12
  },
  {
    "__docId__": 113,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/feed.js~describe13.describe14",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe14.it15",
    "access": "public",
    "description": "should return a String",
    "lineNumber": 16
  },
  {
    "__docId__": 114,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/feed.js~describe13.describe14",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe14.it16",
    "access": "public",
    "description": "should return the correct string",
    "lineNumber": 27
  },
  {
    "__docId__": 115,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "test/feed.js~describe13",
    "testDepth": 1,
    "static": true,
    "longname": "test/feed.js~describe13.describe17",
    "access": "public",
    "description": "#eat",
    "lineNumber": 39
  },
  {
    "__docId__": 116,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/feed.js~describe13.describe17",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe17.it18",
    "access": "public",
    "description": "should return a Boolean",
    "lineNumber": 43
  },
  {
    "__docId__": 117,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "test/feed.js~describe13.describe17",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe17.it19",
    "access": "public",
    "description": "should return true if the given string is a prefix of the Feed.",
    "lineNumber": 54
  },
  {
    "__docId__": 118,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/feed.js~describe13.describe17",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe17.it20",
    "access": "public",
    "description": "should return false if the given string is not a prefix of the Feed.",
    "lineNumber": 65
  },
  {
    "__docId__": 119,
    "kind": "test",
    "name": "describe21",
    "testId": 21,
    "memberof": "test/feed.js~describe13",
    "testDepth": 1,
    "static": true,
    "longname": "test/feed.js~describe13.describe21",
    "access": "public",
    "description": "#revert",
    "lineNumber": 77
  },
  {
    "__docId__": 120,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "test/feed.js~describe13.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe21.it22",
    "access": "public",
    "description": "should revert successfully.",
    "lineNumber": 81
  },
  {
    "__docId__": 121,
    "kind": "test",
    "name": "describe23",
    "testId": 23,
    "memberof": "test/feed.js~describe13",
    "testDepth": 1,
    "static": true,
    "longname": "test/feed.js~describe13.describe23",
    "access": "public",
    "description": "#size",
    "lineNumber": 94
  },
  {
    "__docId__": 122,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "test/feed.js~describe13.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe23.it24",
    "access": "public",
    "description": "should return a Number",
    "lineNumber": 98
  },
  {
    "__docId__": 123,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/feed.js~describe13.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe23.it25",
    "access": "public",
    "description": "should return the size equal to the received string of the Feed, if #eat is not called.",
    "lineNumber": 109
  },
  {
    "__docId__": 124,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/feed.js~describe13.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/feed.js~describe13.describe23.it26",
    "access": "public",
    "description": "should return the correct size if #eat is not called.",
    "lineNumber": 122
  },
  {
    "__docId__": 125,
    "kind": "testFile",
    "name": "test/quantifier.js",
    "content": "\n/* eslint-disable no-undef */\nimport assert from 'assert';\nimport {\n  CharSet, Quantifier, Feed, Range,\n} from '../src';\n\ndescribe('Quantifier', () => {\n  /**\n   *\n   */\n  describe('#parse', () => {\n    /**\n     *\n     */\n    it('should return a undefined if a non-Feed is received', () => {\n      /**\n       *\n       */\n      assert(typeof new Quantifier(new CharSet('t'), 0).parse() === 'undefined');\n      assert(typeof new Quantifier(new CharSet('t'), 0, 1).parse(1) === 'undefined');\n      assert(typeof new Quantifier(new CharSet('t'), undefined).parse(true) === 'undefined');\n      assert(typeof new Quantifier(new CharSet('t'), 0).parse('') === 'undefined');\n      assert(typeof new Quantifier(new CharSet('t'), 0, 1).parse([]) === 'undefined');\n      assert(typeof new Quantifier(new CharSet('t'), undefined).parse({}) === 'undefined');\n      assert(typeof new Quantifier(new CharSet('t'), 0).parse(() => {}) === 'undefined');\n    });\n    /**\n     *\n     */\n    it('should return a undefined if there is no matcher', () => {\n      assert(typeof new Quantifier().parse(new Feed('test')) === 'undefined');\n    });\n    /**\n     *\n     */\n    it('should return the correct sequence', () => {\n      const peg = new Quantifier(new Range('a', 'z'), 0, 2).parse(new Feed('test'));\n      assert(peg[0] === 't');\n      assert(peg[1] === 'e');\n    });\n    /**\n     *\n     */\n    it('should return an empty array if Quantifier(match, 0) matches no result', () => {\n      const peg = new Quantifier(new Range('0', '9'), 0).parse(new Feed('test'));\n      assert(peg.length === 0);\n    });\n    /**\n     *\n     */\n    it('should return undefiend if the required matches is not met', () => {\n      const peg = new Quantifier(new Range('0', '9'), 1).parse(new Feed('test'));\n      assert(typeof peg === 'undefined');\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/test/quantifier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "test",
    "name": "describe27",
    "testId": 27,
    "memberof": "test/quantifier.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/quantifier.js~describe27",
    "access": "public",
    "description": "Quantifier",
    "lineNumber": 8
  },
  {
    "__docId__": 127,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/quantifier.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "test/quantifier.js~describe27.describe28",
    "access": "public",
    "description": "#parse",
    "lineNumber": 12
  },
  {
    "__docId__": 128,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/quantifier.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/quantifier.js~describe27.describe28.it29",
    "access": "public",
    "description": "should return a undefined if a non-Feed is received",
    "lineNumber": 16
  },
  {
    "__docId__": 129,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/quantifier.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/quantifier.js~describe27.describe28.it30",
    "access": "public",
    "description": "should return a undefined if there is no matcher",
    "lineNumber": 31
  },
  {
    "__docId__": 130,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "test/quantifier.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/quantifier.js~describe27.describe28.it31",
    "access": "public",
    "description": "should return the correct sequence",
    "lineNumber": 37
  },
  {
    "__docId__": 131,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "test/quantifier.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/quantifier.js~describe27.describe28.it32",
    "access": "public",
    "description": "should return an empty array if Quantifier(match, 0) matches no result",
    "lineNumber": 45
  },
  {
    "__docId__": 132,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "test/quantifier.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/quantifier.js~describe27.describe28.it33",
    "access": "public",
    "description": "should return undefiend if the required matches is not met",
    "lineNumber": 52
  },
  {
    "__docId__": 133,
    "kind": "testFile",
    "name": "test/range.js",
    "content": "/* eslint-disable no-undef */\nimport assert from 'assert';\nimport { Range, Feed } from '../src';\n\ndescribe('Range', () => {\n  describe('#parse', () => {\n    it('should return a String', () => {\n      /**\n       *\n       */\n      assert(typeof new Range().parse(new Feed('test')) === 'string');\n    });\n    /**\n     *\n     */\n    it('should return a String equal to the CharSet if successful', () => {\n      /**\n       *\n       */\n      assert(new Range().parse(new Feed('test')) === 't');\n    });\n    /**\n     *\n     */\n    it('should return a undefined if unsuccessful', () => {\n      /**\n       *\n       */\n      assert(typeof new Range('0', '9').parse(new Feed('tset')) === 'undefined');\n    });\n    /**\n     *\n     */\n    it('should return a undefined if a non-Feed is received', () => {\n      /**\n       *\n       */\n      assert(typeof new Range('0', '9').parse() === 'undefined');\n      assert(typeof new Range('0', '9').parse(1) === 'undefined');\n      assert(typeof new Range('0', '9').parse(true) === 'undefined');\n      assert(typeof new Range('0', '9').parse('') === 'undefined');\n      assert(typeof new Range('0', '9').parse([]) === 'undefined');\n      assert(typeof new Range('0', '9').parse({}) === 'undefined');\n      assert(typeof new Range('0', '9').parse(() => {}) === 'undefined');\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/test/range.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "test",
    "name": "describe34",
    "testId": 34,
    "memberof": "test/range.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/range.js~describe34",
    "access": "public",
    "description": "Range",
    "lineNumber": 5
  },
  {
    "__docId__": 135,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "test/range.js~describe34",
    "testDepth": 1,
    "static": true,
    "longname": "test/range.js~describe34.describe35",
    "access": "public",
    "description": "#parse",
    "lineNumber": 6
  },
  {
    "__docId__": 136,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "test/range.js~describe34.describe35",
    "testDepth": 2,
    "static": true,
    "longname": "test/range.js~describe34.describe35.it36",
    "access": "public",
    "description": "should return a String",
    "lineNumber": 7
  },
  {
    "__docId__": 137,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "test/range.js~describe34.describe35",
    "testDepth": 2,
    "static": true,
    "longname": "test/range.js~describe34.describe35.it37",
    "access": "public",
    "description": "should return a String equal to the CharSet if successful",
    "lineNumber": 16
  },
  {
    "__docId__": 138,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "test/range.js~describe34.describe35",
    "testDepth": 2,
    "static": true,
    "longname": "test/range.js~describe34.describe35.it38",
    "access": "public",
    "description": "should return a undefined if unsuccessful",
    "lineNumber": 25
  },
  {
    "__docId__": 139,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/range.js~describe34.describe35",
    "testDepth": 2,
    "static": true,
    "longname": "test/range.js~describe34.describe35.it39",
    "access": "public",
    "description": "should return a undefined if a non-Feed is received",
    "lineNumber": 34
  },
  {
    "__docId__": 140,
    "kind": "testFile",
    "name": "test/sequence.js",
    "content": "\n/* eslint-disable no-undef */\nimport assert from 'assert';\nimport { Sequence, CharSet, Feed } from '../src';\n\ndescribe('Sequence', () => {\n  /**\n   *\n   */\n  describe('#parse', () => {\n    /**\n     *\n     */\n    it('should return an Array', () => {\n      /**\n       *\n       */\n      assert(new Sequence([new CharSet('t')]).parse(new Feed('test')) instanceof Array);\n    });\n    /**\n     *\n     */\n    it('should return an Array equal to the Matchers if successful', () => {\n      /**\n       *\n       */\n      const m1 = new CharSet('t');\n      const m2 = new CharSet('e');\n      const s = new Sequence([m1, m2]).parse(new Feed('test'));\n      assert(s[0] === 't');\n      assert(s[1] === 'e');\n    });\n    /**\n     *\n     */\n    it('should return undefined if no matchers were passed', () => {\n      /**\n       *\n       */\n      const s = new Sequence([]).parse(new Feed('test'));\n      assert(typeof s === 'undefined');\n    });\n    /**\n     *\n     */\n    it('should return undefined if one of the matchers fails', () => {\n      /**\n       *\n       */\n      const m1 = new CharSet('t');\n      const m2 = new CharSet('e');\n      const m3 = new CharSet('t');\n      const s = new Sequence([new Sequence([m1, m2]), m3]).parse(new Feed('test'));\n      assert(typeof s === 'undefined');\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/snd-admin/Desktop/Repos/parexgram.js/test/sequence.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "test",
    "name": "describe40",
    "testId": 40,
    "memberof": "test/sequence.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/sequence.js~describe40",
    "access": "public",
    "description": "Sequence",
    "lineNumber": 6
  },
  {
    "__docId__": 142,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "test/sequence.js~describe40",
    "testDepth": 1,
    "static": true,
    "longname": "test/sequence.js~describe40.describe41",
    "access": "public",
    "description": "#parse",
    "lineNumber": 10
  },
  {
    "__docId__": 143,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "test/sequence.js~describe40.describe41",
    "testDepth": 2,
    "static": true,
    "longname": "test/sequence.js~describe40.describe41.it42",
    "access": "public",
    "description": "should return an Array",
    "lineNumber": 14
  },
  {
    "__docId__": 144,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "test/sequence.js~describe40.describe41",
    "testDepth": 2,
    "static": true,
    "longname": "test/sequence.js~describe40.describe41.it43",
    "access": "public",
    "description": "should return an Array equal to the Matchers if successful",
    "lineNumber": 23
  },
  {
    "__docId__": 145,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "test/sequence.js~describe40.describe41",
    "testDepth": 2,
    "static": true,
    "longname": "test/sequence.js~describe40.describe41.it44",
    "access": "public",
    "description": "should return undefined if no matchers were passed",
    "lineNumber": 36
  },
  {
    "__docId__": 146,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "test/sequence.js~describe40.describe41",
    "testDepth": 2,
    "static": true,
    "longname": "test/sequence.js~describe40.describe41.it45",
    "access": "public",
    "description": "should return undefined if one of the matchers fails",
    "lineNumber": 46
  }
]